<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 549423df613c7204d64f7c3a8290edd7d7ae6fc8 Maintainer: samesch Status: ready -->

<sect1 xml:id="migration72.deprecated">
 <title>Veraltete Features in PHP 7.2.x</title>

 <sect2 xml:id="migration72.deprecated.unquoted-strings">
  <title>Zeichenketten ohne Anführungszeichen</title>

  <para>
   Eine Zeichenkette, die nicht in Anführungszeichen steht, wird nur dann als
   Zeichenkette behandelt, wenn es keine globale Konstante mit diesem Namen
   gibt. Dieser Fall erzeugte bisher einen Fehler der Stufe
   <constant>E_NOTICE</constant> und nun stattdessen einen Fehler der Stufe
   <constant>E_WARNING</constant>. In der nächsten PHP-Hauptversion wird dann
   eine <classname>Error</classname>-Exception ausgelöst.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

var_dump(NONEXISTENT);

/* Output:
Warning: Use of undefined constant NONEXISTENT - assumed 'NONEXISTENT' (this will throw an Error in a future version of PHP) in %s on line %d
string(11) "NONEXISTENT"
*/
]]>
   </programlisting>
  </informalexample>
 </sect2>

 <sect2 xml:id="migration72.deprecated.png2wbmp-jpeg2wbmp">
  <title><function>png2wbmp</function> und <function>jpeg2wbmp</function></title>

  <para>
   Bei der Erweiterung GD sind die Funktionen <function>png2wbmp</function>
   und <function>jpeg2wbmp</function> nun veraltet und werden in der nächsten
   PHP-Hauptversion entfernt.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.INTL_IDNA_VARIANT_2003-variant">
  <title>Die Variante <constant>INTL_IDNA_VARIANT_2003</constant></title>

  <para>
   In der Erweiterung Intl ist die Variante
   <constant>INTL_IDNA_VARIANT_2003</constant> veraltet. Sie wird derzeit als
   Standardwert für die Funktionen <function>idn_to_ascii</function> und
   <function>idn_to_utf8</function> verwendet. In PHP 7.4 wird dieser
   Standardwert in <constant>INTL_IDNA_VARIANT_UTS46</constant> geändert und
   in der nächsten Hauptversion von PHP wird
   <constant>INTL_IDNA_VARIANT_2003</constant> komplett entfernt.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.__autoload-method">
  <title>Die Methode <function>__autoload</function></title>

  <para>
   Die Methode <function>__autoload</function> ist veraltet, weil sie der
   Funktion <function>spl_autoload_register</function> unterlegen ist (sie ist
   nicht in der Lage, Autoloader zu verketten) und es keinerlei
   Interoperabilität zwischen den beiden Autoload-Verfahren gibt.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.track_errors-and-php_errormsg">
  <title>Die INI-Einstellung <parameter>track_errors</parameter> und die Variable <literal>$php_errormsg</literal></title>

  <para>
   Wenn die INI-Einstellung <parameter>track_errors</parameter> aktiviert ist,
   wird bei einem nicht-fatalen Fehler die Variable
   <literal>$php_errormsg</literal> im lokalen Bereich erstellt. Da solche
   Fehlerinformationen üblicherweise mit der Funktion
   <function>error_get_last</function> abgefragt werden, ist diese
   Funktionalität nun veraltet.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.create_function-function">
  <title>Die Funktion <function>create_function</function></title>

  <para>
   In Anbetracht der Sicherheitsprobleme dieser Funktion (sie ist ein
   schlanker Wrapper um <function>eval</function>) ist diese Funktion nun
   veraltet. Stattdessen sollten
   <link linkend="functions.anonymous">anonyme Funktionen</link> verwendet
   werden.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.mbstringfunc_overload-ini-setting">
  <title>Die INI-Einstellung <parameter>mbstring.func_overload</parameter></title>

  <para>
   Da es in Umgebungen, in denen diese Einstellung aktiviert ist, Probleme bei
   der Interoperabilität mit zeichenkettenbasierten Funktionen gibt, ist sie
   nun veraltet.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.unset-cast">
  <title>Typumwandlung mit <literal>(unset)</literal></title>

  <para>
   Wird ein Ausdruck in diesen Typ umgewandelt, so ergibt dies immer &null;,
   weshalb diese überflüssige Typ-Umwandlung nun veraltet ist.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.parse_str-no-second-arg">
  <title><function>parse_str</function> ohne zweiten Parameter</title>

  <para>
   Wird die Funktion <function>parse_str</function> ohne den zweiten Parameter
   verwendet, dann werden die Parameter aus der Abfragezeichenkette in der
   lokalen Symboltabelle abgelegt. In Anbetracht der damit verbundenen
   Sicherheitsrisiken ist die Verwendung von <function>parse_str</function>
   ohne den zweiten Parameter nun veraltet. Die Funktion sollte immer mit zwei
   Argumenten verwendet werden, da das zweite Argument bewirkt, dass die
   Abfragezeichenkette in ein Array überführt wird.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.gmp_random-function">
  <title>Die Funktion <function>gmp_random</function></title>

  <para>
   Diese Funktion generiert eine Zufallszahl basierend auf einem Bereich, der
   durch eine nicht näher spezifizierte, plattformspezifische Länge der
   einzelnen Elemente berechnet wird. Aus diesem Grund ist die Funktion nun
   veraltet. Um eine Zustallszahl unter Verwendung der Erweiterung GMP zu
   erzeugen, sollten stattdessen die Funktionen
   <function>gmp_random_bits</function> und
   <function>gmp_random_range</function> verwendet werden.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.each-function">
  <title>Die Funktion <function>each</function></title>

  <para>
   Diese Funktion ist bei einer Iteration viel langsamer als ein gewöhnliches
   <literal>foreach</literal> und führt bei manchen Änderungen an PHP selbst
   zu Implementierungsproblemen, weshalb diese Funktion für veraltet erklärt
   wurde.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.assert-string-arg">
  <title>Übergabe einer Zeichenkette an <function>assert</function></title>

  <para>
   Wenn <function>assert</function> mit einer Zeichenkette als Parameter
   verwendet wird, muss die Zeichenkette mittels <function>eval</function>
   ausgewertet werden. Angesichts des Potenzials für die
   Remote-Code-Ausführung ist die Übergabe einer Zeichenkette an
   <function>assert</function> nun zugunsten der Verwendung boolescher
   Ausdrücke veraltet.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.errcontext-arg-of-error-handlers">
  <title>Der Parameter <literal>$errcontext</literal> bei Fehlerbehandlungen</title>

  <para>
   Der Parameter <literal>$errcontext</literal> enthält alle lokalen Variablen
   der Stelle, an der der Fehler auftrat. Weil er nur selten verwendet wird
   und Probleme mit internen Optimierungen verursacht, ist es nun veraltet. Um
   Informationen über lokale Variablen am Ort des Fehlers abzurufen, sollte
   stattdessen ein Debugger verwendet werden,
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.read_exif_data-function">
  <title>Die Funktion <function>read_exif_data</function></title>

  <para>
   Der Alias <function>read_exif_data</function> ist veraltet. Stattdessen
   sollte die Funktion <function>exif_read_data</function> verwendet werden.
  </para>
 </sect2>

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
