<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: bd3486422338656009b890c04ff132f1c1a61176 Maintainer: simp Status: ready -->
<!-- Credits: hholzgra -->
<refentry xml:id="function.mysql-query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysql_query</refname>
  <refpurpose>Sendet eine Abfrage an MySQL</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <warning>
   &mysql.alternative.note;
   <simplelist role="alternatives">
    <member><function>mysqli_query</function></member>
    <member><methodname>PDO::query</methodname></member>
   </simplelist>
  </warning>
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>mysql_query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type>resource</type><parameter>link_identifier</parameter><initializer>NULL</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>mysql_query</function> sendet eine einzelne Abfrage (mehrere
   Abfragen werden nicht unterstützt) zur momentan aktiven Datenbank auf dem
   Server, die mit der übergebenen Verbindungskennung
   <parameter>link_identifier</parameter> verknüpft ist.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       Eine SQL-Anweisung.
      </para>
      <para>
       Die Anweisung sollte nicht mit einem Semikolon abgeschlossen werden.
       Werte innerhalb der Abfrage sollten <link
       linkend="function.mysql-real-escape-string">korrekt maskiert
       werden</link>.
      </para>
     </listitem>
    </varlistentry>
    &mysql.linkid.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Für SELECT, SHOW, DESCRIBE, EXPLAIN und andere Anweisungen, die eine
   Ergebnismenge zurückgeben, gibt <function>mysql_query</function> bei Erfolg
   eine &resource; zurück, oder &false; bei einem Fehler.
  </para>
  <para>
   Für alle anderen von SQL-Anweisungen wie INSERT, UPDATE, DELETE, DROP, etc,
   gibt <function>mysql_query</function> bei Erfolg &true; zurück oder &false;
   bei einem Fehler.
  </para>
  <para>
   Die zurückgegebene Ergebnisressource sollte an
   <function>mysql_fetch_array</function> oder andere Funktionen, die mit
   Ergebnis Tabellen umgehen, übergeben werden, um auf die erhaltenen Daten
   zuzugreifen.
  </para>
  <para>
   Verwenden sie <function>mysql_num_rows</function> um zu erfahren, wieviele
   Datensätze für eine SELECT-Anweisung zurückgegeben wurden, oder
   <function>mysql_affected_rows</function> um zu erfahren, wieviele
   Datensätze von einer DELETE-, INSERT-, REPLACE- oder UPDATE-Anweisung
   betroffen waren.
  </para>
  <para>
   <function>mysql_query</function> wird ebenfalls fehlschlagen und &false;
   zurückgeben, wenn der Benutzer nicht die Rechte hat, auf die Tabellen, die
   in der Anweisung referenziert wurden, zuzugreifen.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ungültige Anfrage</title>
    <para>
     Die folgende Abfrage ist syntaktisch falsch, deshalb gibt
     <function>mysql_query</function> &false; zurück:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$result = mysql_query('SELECT * WHERE 1=1');
if (!$result) {
    die('Ungültige Abfrage: ' . mysql_error());
}

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Gültige Anfrage</title>
    <para>
     Die folgende Abfrage ist gültig, daher gibt
     <function>mysql_query</function> eine &resource; zurück.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// Dies könnte z. B. durch einen Benutzer angegeben werden
$firstname = 'fred';
$lastname  = 'fox';

// Formuliere Abfrage
// Dies ist die beste Art, eine SQL-Abfrage durchzuführen
// Für weitere Beispiele siehe: mysql_real_escape_string()
$query = sprintf("SELECT firstname, lastname, address, age FROM friends
    WHERE firstname='%s' AND lastname='%s'",
    mysql_real_escape_string($firstname),
    mysql_real_escape_string($lastname));

// Führe Abfrage aus
$result = mysql_query($query);

// Prüfe Ergebnis
// Dies zeigt die tatsächliche Abfrage, die an MySQL gesandt wurde und den
// Fehler. Nützlich bei der Fehlersuche
if (!$result) {
    $message  = 'Ungültige Abfrage: ' . mysql_error() . "\n";
    $message .= 'Gesamte Abfrage: ' . $query;
    die($message);
}

// Verwende Ergebnis
// Der Versuch $result auszugeben, erlaubt keine Zugriff auf die Informationen
// der Ressource.
// Eine der MySQL-result-Funktionen muss verwendet werden
// Siehe auch: mysql_result(), mysql_fetch_array(), mysql_fetch_row(), etc.
while ($row = mysql_fetch_assoc($result)) {
    echo $row['firstname'];
    echo $row['lastname'];
    echo $row['address'];
    echo $row['age'];
}

// Gebe Ressourcen, die mit der Ergebnismenge assoziiert sind, frei
// Dies geschieht am Ende eines Skripts automatisch
mysql_free_result($result);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysql_connect</function></member>
    <member><function>mysql_error</function></member>
    <member><function>mysql_real_escape_string</function></member>
    <member><function>mysql_result</function></member>
    <member><function>mysql_fetch_assoc</function></member>
    <member><function>mysql_unbuffered_query</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
