<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 65e697ff671608989432a6e6bf8ae8128b2be2c7 Maintainer: simp Status: ready -->
<!-- Credits: hholzgra -->
<refentry xml:id="function.mysql-affected-rows" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysql_affected_rows</refname>
  <refpurpose>
   Liefert die Anzahl betroffener Datensätze einer vorhergehenden
   MySQL-Operation
  </refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <warning>
   &mysql.alternative.note;
   <simplelist role="alternatives">
    <member><function>mysqli_affected_rows</function></member>
    <member><methodname>PDOStatement::rowCount</methodname></member>
   </simplelist>
  </warning>
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>mysql_affected_rows</methodname>
   <methodparam choice="opt"><type>resource</type><parameter>link_identifier</parameter><initializer>NULL</initializer></methodparam>
  </methodsynopsis>
  <para>
   Gibt die Anzahl der Datensätze zurück, die von der letzten INSERT-
   UPDATE-, REPLACE- oder DELETE-Abfrage in Verbindung mit
   <parameter>link_identifier</parameter> betroffen waren.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysql.linkid.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt bei Erfolg die Anzahl betroffener Datensätze und zurück -1 falls die
   letzte Abfrage fehlschlug.
  </para>
  <para>
   War die letzte Abfrage ein DELETE-Anweisung ohne WHERE-Bedingung, wurden
   alle Datensätze aus der Tabelle gelöscht. Für MySQL-Versionen vor 4.1.2
   wird diese Funktion hier aber Null (0) zurückgeben.
  </para>
  <para>
   Verwenden Sie UPDATE, wird MySQL keine Spalten aktualisieren, bei denen der
   neue Wert dem alten entspricht. Das kann dazu führen, dass
   <function>mysql_affected_rows</function> nicht die tatsächliche Anzahl der
   betroffenen Zeilen zurückgibt, sondern nur die, die tatsächlich von der
   Abfrage betroffen sind.
  </para>
  <para>
   REPLACE-Anfragen löschen zunächst den Eintrag mit dem gleichen
   Primärschlüssel und fügen dann den neuen Eintrag ein. Diese Funktion gibt
   in diesem Fall die Summe aus gelöschten und eingefügten Einträgen zurück.
  </para>
  <para>
   Im Falle von "INSERT ... ON DUPLICATE KEY UPDATE"-Anweisungen ist der
   Rückgabewert <literal>1</literal>, wenn eine Einfügung vorgenommen wurde
   oder <literal>2</literal>, wenn eine bestehende Zeile aktualisiert wurde.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>mysql_affected_rows</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Keine Verbindung möglich: ' . mysql_error());
}
mysql_select_db('mydb');

/* dies sollte die korrekte Anzahl gelöschter Datensätze zurückgeben */
mysql_query('DELETE FROM mytable WHERE id < 10');
printf("Gelöschte Datensätze: %d\n", mysql_affected_rows());

/* mit einer WHERE Bedingung, die niemals wahr ist, sollte 0 zurückgegeben
   werden */
mysql_query('DELETE FROM mytable WHERE 0');
printf("Gelöschte Datensätze: %d\n", mysql_affected_rows());
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Gelöschte Datensätze: 10
Gelöschte Datensätze: 0
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><function>mysql_affected_rows</function>-Beispiel mit Transaktionen</title>
    <programlisting role="php">
<![CDATA[
<?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$link) {
    die('keine Verbindung möglich: ' . mysql_error());
}
mysql_select_db('mydb');

/* Update der Datensätze */
mysql_query("UPDATE mytable SET used=1 WHERE id < 10");
printf ("Aktualisierte Datensätze: %d\n", mysql_affected_rows());
mysql_query("COMMIT");
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Aktualisierte Datensätze: 10
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <title>Transaktionen</title>
   <para>
    Falls Sie Transaktionen verwenden, müssen Sie
    <function>mysql_affected_rows</function> unmittelbar nach Ihrer INSERT-,
    UPDATE-, oder DELETE-Abfrage aufrufen, nicht nach dem Commit.
   </para>
  </note>
  <note>
   <title>SELECT Anweisungen</title>
   <para>
    Um die Anzahl der gelieferten Datensätze einer SELECT-Abfrage zu erhalten,
    verwenden Sie stattdessen die Funktion <function>mysql_num_rows</function>.
   </para>
  </note>
  <note>
   <title>Kaskadierende Fremdschlüssel-Beziehungen</title>
   <para>
    <function>mysql_affected_rows</function> zählt keine Zeilen, die implizit
    durch die Verwendung von ON DELETE CASCADE und/oder ON UPDATE CASCADE in
    Fremdschlüssel-Bedingungen betroffen sind.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysql_num_rows</function></member>
    <member><function>mysql_info</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
