<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: b412bbd26214f7281ac7dd858710e09952a275f2 Maintainer: nikic Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: a2be339a6624a85bc98dbfda574e370f17f2ea64 Reviewer: samesch -->
<refentry xml:id="function.register-shutdown-function" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>register_shutdown_function</refname>
  <refpurpose>Registriert eine Funktion zur Ausführung beim Skript-Abschluss</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>register_shutdown_function</methodname>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
   <methodparam rep="repeat"><type>mixed</type><parameter>args</parameter></methodparam>
  </methodsynopsis>
  <para>
   Registriert ein <parameter>callback</parameter>, welches ausgeführt werden
   soll, sobald die Ausführung des Skripts endet oder wenn
   <function>exit</function> aufgerufen wird.
  </para>
  <para>
   <function>register_shutdown_function</function> kann mehrmals
   hintereinander aufgerufen werden, und die Funktionen werden in derselben
   Reihenfolge aufgerufen, wie sie registriert wurden. Wenn
   <function>exit</function> innerhalb einer registrierten Shutdown-Funktion
   aufgerufen wird, bricht die Ausführung vollständig ab und keine weiteren
   registrierten Shutdown-Funktionen werden ausgeführt.
  </para>
  <para>
   Shutdown-Funktionen können außerdem selbst
   <function>register_shutdown_function</function> aufrufen, um eine
   Shutdown-Funktion am Ende der Warteschlange hinzuzufügen.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       Das Shutdown-Callback, welches registriert werden soll.
      </para>
      <para>
       Die Shutdown-Callbacks werden als Teil der Anfrage ausgeführt, &dh; es
       ist möglich, Ausgaben zu senden und auf Ausgabepuffer zuzugreifen.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>args</parameter></term>
     <listitem>
      <para>
       Hier können zusätzliche Parameter an die Shutdown-Funktion übergeben
       werden.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>register_shutdown_function</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
function shutdown()
{
    // Das ist unsere Shutdown-Funktion, in welcher
    // wir noch letzte Anweisungen ausführen können
    // bevor die Ausführung beendet wird.

    echo 'Skript erfolgreich ausgeführt', PHP_EOL;
}

register_shutdown_function('shutdown');
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Das Arbeitsverzeichnis des Skripts kann sich bei manchen Webservern, &zb;
    Apache, innerhalb des Shutdown-Callbacks ändern.
   </para>
  </note>
  <note>
   <para>
    Shutdown-Funktionen werden nicht ausgeführt, wenn der Prozess mit einem
    SIGTERM- oder SIGKILL-Signal terminiert wurde. Ein SIGKILL kann zwar nicht
    abgefangen werden, aber dafür kann mittels
    <function>pcntl_signal</function> ein Handler für SIGTERM registriert
    werden, der <function>exit</function> für einen sauberen Abbruch
    verwendet.
   </para>
  </note>
  <note>
   <para>
    Shutdown-Funktionen laufen getrennt von der Zeit, die von
    <link linkend="ini.max-execution-time">max_execution_time</link> gemessen
    wird. Das bedeutet, dass die Shutdown-Funktionen auch dann noch aufgerufen
    werden, wenn ein Prozess beendet wird, weil er zu lange läuft. Außerdem
    wird eine laufende Shutdown-Funktion nicht beendet, wenn währenddessen die
    <literal>max_execution_time</literal> abläuft.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="ini.auto-append-file">auto_append_file</link></member>
    <member><function>exit</function></member>
    <member><function>fastcgi_finish_request</function></member>
    <member>Den Abschnitt über <link linkend="features.connection-handling">Verbindungssteuerung</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
