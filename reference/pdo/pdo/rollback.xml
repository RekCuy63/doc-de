<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 661e6858acade9f5a08fc8f9c07b605f42f4a700 Maintainer: samesch Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="pdo.rollback" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::rollBack</refname>
  <refpurpose>Macht eine Transaktion rückgängig (Rollback)</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PDO">
   <modifier>public</modifier> <type>bool</type><methodname>PDO::rollBack</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Macht die aktuelle durch <methodname>PDO::beginTransaction</methodname>
   gestartete Transaktion rückgängig.
  </para>
  <para>
   Falls die Datenbank auf den Autocommit-Modus eingestellt war, wird er
   wiederhergestellt, nachdem die Transaktion zurückgesetzt wurde.
  </para>
  <para>
   Wenn im Rahmen einer Transaktion eine DDL- (Database Definition Language)
   Anweisung wie DROP TABLE oder CREATE TABLE ausgeführt wird, geben einige
   Datenbanken, darunter auch MySQL, ein implizites COMMIT aus. Durch das
   implizite COMMIT wird verhindert, dass weitere im Rahmen der Transaktion
   vorgenommene Änderungen rückgängig gemacht werden können.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Wenn es keine aktive Transaktion gibt, wird eine
   <classname>PDOException</classname> ausgelöst.
  </para>
  &pdo.errors.exception-not-errmode;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Rückgängigmachen einer Transaktion</title>
    <para>
     Im folgenden Beispiel wird eine Transaktion gestartet und es werden zwei
     Anweisungen ausgeführt, die die Datenbank verändern, bevor die Änderungen
     rückgängig gemacht werden. Bei MySQL wird die Transaktion jedoch durch
     die Anweisung DROP TABLE automatisch bestätigt, sodass keine der
     Änderungen dieser Transaktion rückgängig gemacht wird.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* Starten einer Transaktion, wobei Autocommit deaktiviert wird */
$dbh->beginTransaction();

/* Ändern des Datenbankschemas und der Daten */
$sth = $dbh->exec("DROP TABLE fruit");
$sth = $dbh->exec("UPDATE dessert
    SET name = 'hamburger'");

/* Erkennen eines Fehlers und Zurücknehmen der Änderungen */
$dbh->rollBack();

/* Die Datenbankverbindung ist nun wieder im Autocommit-Modus */
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDO::beginTransaction</methodname></member>
    <member><methodname>PDO::commit</methodname></member>
    <member><link linkend="pdo.transactions">Transaktionen und Autocommit</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
