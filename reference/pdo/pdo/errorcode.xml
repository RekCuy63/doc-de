<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 661e6858acade9f5a08fc8f9c07b605f42f4a700 Maintainer: samesch Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="pdo.errorcode" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::errorCode</refname>
  <refpurpose>
   Ruft den SQLSTATE-Code ab, der mit der letzten Operation über das
   Datenbank-Handle verknüpft ist
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PDO">
   <modifier>public</modifier> <type class="union"><type>string</type><type>null</type></type><methodname>PDO::errorCode</methodname>
   <void/>
  </methodsynopsis>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt einen SQLSTATE zurück, eine fünfstellige alphanumerische Kennung, die
   im ANSI SQL-92-Standard definiert ist. Kurz gesagt besteht ein SQLSTATE aus
   einem zweistelligen Klassenwert, gefolgt von einem dreistelligen
   Unterklassenwert. Ein Klassenwert von 01 steht für eine Warnung und wird
   vom Rückgabewert SQL_SUCCESS_WITH_INFO begleitet. Alle anderen Klassenwerte
   mit Ausnahme der Klasse "IM" weisen auf einen Fehler hin. Die Klasse "IM"
   ist spezifisch für Warnungen und Fehler, die sich aus der Implementierung
   von PDO (oder ODBC, wenn der ODBC-Treiber verwendet wird) selbst ergeben.
   Der Unterklassenwert "000" in einer Klasse zeigt an, dass es keine
   Unterklasse für diesen SQLSTATE gibt.
  </para>
  <para>
   <methodname>PDO::errorCode</methodname> ruft Fehlercodes nur bei
   Operationen ab, die direkt auf dem Datenbank-Handle ausgeführt werden. Wenn
   ein PDOStatement-Objekt mittels <methodname>PDO::prepare</methodname> oder
   <methodname>PDO::query</methodname> erzeugt wird und ein Fehler auf dem
   Anweisungs-Handle auftritt, zeigt <methodname>PDO::errorCode</methodname>
   diesen Fehler nicht an. Um den Fehlercode einer Operation zu erhalten, die
   mit einem bestimmten Anweisungs-Handle durchgeführt wurde, muss
   <methodname>PDOStatement::errorCode</methodname> aufgerufen werden.
  </para>
  <para>
   Gibt &null; zurück, wenn keine Operation über das Datenbank-Handle
   ausgeführt wurde.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example><title>Abrufen eines SQLSTATE-Codes</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Auslösen eines Fehlers - die Tabelle BONES existiert nicht */
$dbh->exec("INSERT INTO bones(skull) VALUES ('lucy')");

echo "\nPDO::errorCode(): ", $dbh->errorCode();
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
PDO::errorCode(): 42S02
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDO::errorInfo</methodname></member>
    <member><methodname>PDOStatement::errorCode</methodname></member>
    <member><methodname>PDOStatement::errorInfo</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
