<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 4225e50bc391ddba99e367c231463da0dc04357d Maintainer: sammywg Status: ready -->
<refentry xml:id="function.sscanf" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>sscanf</refname>
  <refpurpose>Überträgt einen String in ein angegebenes Format</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>int</type><type>null</type></type><methodname>sscanf</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>string</type><parameter>format</parameter></methodparam>
   <methodparam rep="repeat"><type>mixed</type><parameter role="reference">vars</parameter></methodparam>
  </methodsynopsis>
  <para>
   Die Funktion <function>sscanf</function> ist das Eingabegegenstück zu
   <function>printf</function>. <function>sscanf</function> liest den String
   <parameter>string</parameter> und interpretiert ihn entsprechend dem
   übergegebenen <parameter>format</parameter>-Parameter.
  </para>
  <para>
   Beliebige Whitespaces im Formatstring entsprechen beliebigen Whitespaces im
   Inputstring. Das heißt, dass auch ein Tabulator (<literal>\t</literal>) im
   Formatstring einem einzelnen Leerzeichen des Inputstrings entsprechen kann.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Der zu parsende Eingabe<type>string</type>.
      </para>
     </listitem>
    </varlistentry>
    &strings.scanf.parameter.format;
    <varlistentry>
     <term><parameter>vars</parameter></term>
     <listitem>
      <para>
       Optionale als Referenz übergebene Variablen, die die geparsten Werte
       enthalten.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Werden nur 2 Parameter an die Funktion übergeben, werden die analysierten
   Werte als Array zurückgegeben. Andernfalls, wenn optionale Parameter
   übergeben wurden, gibt die Funktion die Anzahl der ermittelten Werte zurück.
   Die optionalen Parameter müssen als Referenz übergeben werden.
  </para>
  <para>
   Werden mehr Teilzeichenketten in <parameter>format</parameter> erwartet
   als in <parameter>string</parameter> verfügbar sind, wird &null;
   zurückgegeben.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>sscanf</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
// Ermittlung der Serien-Nr.
list($serial) = sscanf("SN/2350001", "SN/%d");
// und des Herstellungsdatums
$mandate = "Januar 01 2000";
list($monat, $tag, $jahr) = sscanf($mandate, "%s %d %d");
echo "Das Teil $serial wurde hergestellt am: "
     . "$jahr-" . substr($monat, 0, 3) . "-$tag\n";
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Werden optionale Parameter übergeben, gibt die Funktion die Anzahl
   der ermittelten Werte zurück.
  </para>
  <para>
   <example>
    <title><function>sscanf</function> - Verwendung optionaler Parameter</title>
    <programlisting role="php">
<![CDATA[
<?php
// Auslesen der Autoren-Info und Erzeugung eines DocBook-Eintrages
$auth = "24\tLewis Carroll";
$n = sscanf($auth, "%d\t%s %s", $id, $first, $last);
echo "<author id='$id'>
    <firstname>$first</firstname>
    <surname>$last</surname>
</author>\n";
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>printf</function></member>
    <member><function>sprintf</function></member>
    <member><function>fprintf</function></member>
    <member><function>vprintf</function></member>
    <member><function>vsprintf</function></member>
    <member><function>vfprintf</function></member>
    <member><function>fscanf</function></member>
    <member><function>number_format</function></member>
    <member><function>date</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
