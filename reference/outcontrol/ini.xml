<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 86e6094e86b84a51d00ab217ac50ce8dde33d82a Maintainer: hholzgra Status: ready -->

<section xml:id="outcontrol.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  <table>
   <title>Konfigurationsoptionen für die Ausgabekontrolle</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>&Name;</entry>
      <entry>&Default;</entry>
      <entry>&Changeable;</entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody>
    <row>
     <entry><link linkend="ini.output-buffering">output_buffering</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_PERDIR</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.output-handler">output_handler</link></entry>
     <entry>NULL</entry>
     <entry>PHP_INI_PERDIR</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.implicit-flush">implicit_flush</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.url-rewriter.tags">url_rewriter.tags</link></entry>
     <entry>"a=href,area=href,frame=src,form=,fieldset="</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>
      Vor PHP 7.1.0 wurde dies für das URL-Rewriting verwendet, wenn die
      transparente SID der Session aktiviert war. Von PHP 7.1.0 an wird es nur
      noch von <function>output_add_rewrite_var</function> verwendet.
     </entry>
    </row>
    <row>
     <entry><link linkend="ini.url-rewriter.hosts">url_rewriter.hosts</link></entry>
     <entry>
      <literal>$_SERVER['HTTP_HOST']</literal> wird als Voreinstellung verwendet.
     </entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Verfügbar von PHP 7.1.0 an</entry>
    </row>
    </tbody>
   </tgroup>
  </table>
   &ini.php.constants;
 </para>

 &ini.descriptions.title;

 <para>
 <variablelist>
  <varlistentry xml:id="ini.output-buffering">
   <term>
    <parameter>output_buffering</parameter>
    <type>bool</type>/<type>int</type>
   </term>
   <listitem>
    <para>
     Sie können die Ausgabepufferung für alle Skripte aktivieren, indem Sie
     diesen Wert auf 'On' setzen. Wenn Sie die Größe des Puffers limitieren
     wollen, so können Sie die maximale Größe in Bytes an Stelle von 'On'
     angeben (&zb; output_buffering=4096). Dieser Wert ist für den
     PHP-CLI-Kommandozeileninterpreter grundsätzlich 'Off'.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.output-handler">
   <term>
    <parameter>output_handler</parameter>
    <type>string</type>
   </term>
   <listitem>
    <para>
     Sie können die Ausgaben Ihres Skriptes an eine Funktion weiterleiten.
     Wenn sie &zb; <function>mb_output_handler</function> als output_handler
     setzen, wird die Zeichenkodierung transparent in die angegebene Kodierung
     umgewandelt. Das Setzen einer beliebigen Ausgabesteuerung aktiviert die
     Ausgabepufferung automatisch.
    </para>
    <note>
     <para>
      Sie können <function>mb_output_handler</function> nicht gleichzeitig mit
      <function>ob_iconv_handler</function> und
      <function>ob_gzhandler</function> nicht gleichzeitig mit <link
      linkend="ini.zlib.output-compression">zlib.output_compression</link>.
      benutzen.
     </para>
    </note>
    <note>
     <para>
      Es können nur eingebaute PHP-Funktionen mit dieser Anweisung verwendet
      werden. Benutzerdefinierte Funktionen können mit Hilfe der
      <function>ob_start</function>-Funktion genutzt werden.
     </para>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.implicit-flush">
   <term>
    <parameter>implicit_flush</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <para>
     Diese Option ist standardmäßig &false;. Wenn Sie implicit_flush auf
     &true; setzen, wird PHP angewiesen, den Ausgabepuffer nach jedem
     Ausgabeblock automatisch zu leeren. Dies ist äquivalent zu
     <function>flush</function>-Aufrufen nach jedem
     <function>print</function>- oder <function>echo</function>-Aufruf und
     nach jedem <literal>HTML</literal>-Block.
    </para>
    <para>
     In Webanwendungen hat diese Option massive Performanceauswirkungen und
     wird im Allgemeinen nur für Debugging-Zwecke empfohlen. Im
     <literal>CLI SAPI</literal>-Modus (Kommandozeileninterpreter) dagegen
     ist diese Option standardmäßig &true;.
    </para>
    <para>
     Siehe auch <function>ob_implicit_flush</function>.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.url-rewriter.tags">
   <term>
    <parameter>url_rewriter.tags</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>url_rewriter.tags</literal> gibt an, welche HTML-Tags durch
     <function>output_add_rewrite_var</function> umgeschrieben werden. Die
     Voreinstellung ist
     <literal>a=href,area=href,frame=src,input=src,form=</literal>
    </simpara>
    <simpara>
     <literal>form</literal> ist ein besonderes Tag. <literal>&lt;input
     hidden="session_id" name="session_name"&gt;</literal> wird als
     Formular-Variable hinzugefügt.
    </simpara>
    <note>
     <simpara>
      Vor PHP 7.1.0 wurde <link
      linkend="ini.url-rewriter.tags">url_rewriter.tags</link> verwendet, um
      <link linkend="ini.session.trans-sid-tags">session.trans_sid_tags</link>
      anzugeben. Von PHP 7.1.0 an wird <literal>fieldset</literal> nicht
      länger als besonderes Tag angesehen.
     </simpara>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.url-rewriter.hosts">
   <term>
    <parameter>url_rewriter.hosts</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>url_rewriter.hosts</literal> gibt an, welche Hosts umgeschrieben
     werden, um <function>output_add_rewrite_var</function>-Werte aufzunehmen.
     Standardmäßig ist das <literal>$_SERVER['HTTP_HOST']</literal>. Mehrere
     Hosts können durch "," angegeben werden, &zb;
     <literal>php.net,wiki.php.net,bugs.php.net</literal>. Zwischen den Hosts
     ist kein Leerzeichen erlaubt.
    </simpara>
   </listitem>
  </varlistentry>

 </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
