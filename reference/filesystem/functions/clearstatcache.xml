<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: e82ff8a846af03b863c4a57fbedc0a93af0e68db Maintainer: khp Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: e82ff8a846af03b863c4a57fbedc0a93af0e68db Reviewer: samesch -->
<refentry xml:id="function.clearstatcache" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>clearstatcache</refname>
  <refpurpose>Löscht den Status-Cache</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>clearstatcache</methodname>
   <methodparam choice="opt"><type>bool</type><parameter>clear_realpath_cache</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>filename</parameter><initializer>""</initializer></methodparam>
  </methodsynopsis>
  <para>
   Wenn <function>stat</function>, <function>lstat</function> oder eine andere
   der in der nachstehenden Liste aufgeführten betroffenen Funktionen
   verwendet wird, speichert (cached) PHP die von diesen Funktionen
   zurückgegebenen Informationen temporär, um eine bessere Performance zu
   bieten. In bestimmten Fällen kann es jedoch erforderlich sein, diese
   zwischengespeicherten Informationen zu löschen. Wird &zb; dieselbe Datei
   innerhalb eines Skriptes mehrmals geprüft und wird diese Datei
   möglicherweise während der Ausführung des Skriptes gelöscht oder verändert,
   könnte es sinnvoll sein, den Status-Cache zu löschen. In solchen Fällen
   empfiehlt es sich, die von PHP über eine Datei zwischengespeicherten
   Informationen mittels <function>clearstatcache</function> zu löschen.
  </para>
  <para>
   Zu beachten ist auch, dass PHP die Informationen über nicht existente
   Dateien nicht zwischenspeichert. Falls also <function>file_exists</function>
   für eine Datei aufgerufen wird, die nicht existiert, wird &false;
   zurückgegeben, bis sie erzeugt wird. Wenn die Datei erzeugt wurde, wird
   &true; zurückgegeben, auch wenn die Datei danach gelöscht wird.
   <function>unlink</function> leert den Zwischenspeicher jedoch automatisch.
  </para>
  <note>
   <para>
    Diese Funktion speichert Informationen über bestimmte Dateinamen, weshalb
    <function>clearstatcache</function> nur aufgerufen werden muss, wenn
    mehrere Operationen an demselben Dateinamen durchgeführt werden, und die
    Informationen über genau diese Datei nicht gespeichert werden sollen.
   </para>
  </note>
  <para>
   Betroffene Funktionen sind <function>stat</function>,
   <function>lstat</function>,
   <function>file_exists</function>,
   <function>is_writable</function>,
   <function>is_readable</function>,
   <function>is_executable</function>,
   <function>is_file</function>,
   <function>is_dir</function>,
   <function>is_link</function>,
   <function>filectime</function>,
   <function>fileatime</function>,
   <function>filemtime</function>,
   <function>fileinode</function>,
   <function>filegroup</function>,
   <function>fileowner</function>,
   <function>filesize</function>,
   <function>filetype</function> und
   <function>fileperms</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>clear_realpath_cache</parameter></term>
     <listitem>
      <para>
       Ob der realpath-Zwischenspeicher <emphasis>ebenfalls</emphasis> geleert
       werden soll.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Leere den realpath- und den Stat-Zwischenspeicher nur für einen
       bestimmten Dateinamen; wird nur genutzt, wenn
       <parameter>clear_realpath_cache</parameter> &true; ist.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>clearstatcache</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$file = 'output_log.txt';

function get_owner($file)
{
    $stat = stat($file);
    $user = posix_getpwuid($stat['uid']);
    return $user['name'];
}

$format = "UID @ %s: %s\n";

printf($format, date('r'), get_owner($file));

chown($file, 'ross');
printf($format, date('r'), get_owner($file));

clearstatcache();
printf($format, date('r'), get_owner($file));
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
UID @ Sun, 12 Oct 2008 20:48:28 +0100: root
UID @ Sun, 12 Oct 2008 20:48:28 +0100: root
UID @ Sun, 12 Oct 2008 20:48:28 +0100: ross
]]>
    </screen>
   </example>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
