<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: d0cc084a925f112c156d0dbac12718b2bd8d4889 Maintainer: wiesemann Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: 70babd5faf9fc63f08af63dc6781a350d04a3c57 Reviewer: samesch -->
<refentry xml:id="function.pathinfo" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pathinfo</refname>
  <refpurpose>Liefert Informationen über einen Dateipfad</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>string</type></type><methodname>pathinfo</methodname>
   <methodparam><type>string</type><parameter>path</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer><constant>PATHINFO_ALL</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>pathinfo</function> gibt Informationen über einen Dateipfad
   (<parameter>path</parameter>) zurück: entweder als assoziatives Array
   oder als String, abhängig vom Parameter <parameter>flags</parameter>.
  </para>
  <note>
   <para>
    Wie die aktuellen Pfadinformationen ermittelt werden können, ist im
    Abschnitt
    <link linkend="language.variables.predefined">Vordefinierte Variablen</link>
    beschrieben.
   </para>
  </note>
  <note>
   <para>
    <function>pathinfo</function> verarbeitet lediglich den Eingabestring und
    kennt weder das tatsächliche Dateisystem noch Pfadkomponenten wie
    "<literal>..</literal>".
   </para>
  </note>
  <note>
   <para>
    Das Zeichen <literal>\</literal> wird nur auf Windows-Systemen als
    Trennzeichen zwischen Verzeichnissen interpretiert. Auf anderen Systemen
    wird es wie jedes andere Zeichen behandelt.
   </para>
  </note>
  <caution>
   <para>
    <function>pathinfo</function> berücksichtigt die Locale-Einstellung. Um
    einen Pfad, der Multibyte-Zeichen enthält, korrekt parsen zu können, muss
    die entsprechende Locale mit der Funktion <function>setlocale</function>
    gesetzt werden.
   </para>
  </caution>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>path</parameter></term>
     <listitem>
      <para>
       Der zu analysierende Dateipfad.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Gibt, falls vorhanden, ein bestimmtes Element an, das zurückgegeben
       werden soll. Mögliche Werte:
       <constant>PATHINFO_DIRNAME</constant>,
       <constant>PATHINFO_BASENAME</constant>,
       <constant>PATHINFO_EXTENSION</constant> oder
       <constant>PATHINFO_FILENAME</constant>.
      </para>
      <para>
       Falls <parameter>flags</parameter> nicht angegeben wird, werden alle
       verfügbaren Elemente zurückgegeben.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Falls der Parameter <parameter>flags</parameter> nicht angegeben wird,
   wird ein assoziatives <type>Array</type> mit den folgenden Elementen
   zurückgegeben: <literal>dirname</literal>, <literal>basename</literal>,
   <literal>extension</literal> (falls vorhanden) und
   <literal>filename</literal>.
  </para>
  <note>
   <para>
    Wenn <parameter>path</parameter> mehr als eine Erweiterung hat, gibt
    <constant>PATHINFO_EXTENSION</constant> nur die letzte zurück, und
    <constant>PATHINFO_FILENAME</constant> entfernt nur die letzte.
    (Siehe auch das erste Beispiel weiter unten.)
   </para>
  </note>
  <note>
   <para>
    Falls <parameter>path</parameter> keine Erweiterung hat, wird das
    Element <literal>extension</literal> nicht zurückgegeben
    (siehe das zweite Beispiel unten).
   </para>
  </note>
  <note>
   <para>
    Beginnt <literal>basename</literal> von <parameter>path</parameter> mit
    einem Punkt, werden die folgenden Zeichen als <literal>extension</literal>
    interpretiert, und <literal>filename</literal> ist leer (siehe das dritte
    Beispiel unten).
   </para>
  </note>
  <para>
   Falls <parameter>flags</parameter> genutzt wird, gibt diese Funktion
   einen <type>String</type> mit dem gewünschten Element zurück.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>pathinfo</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$path_parts = pathinfo('/www/htdocs/inc/lib.inc.php');

echo $path_parts['dirname'], "\n";
echo $path_parts['basename'], "\n";
echo $path_parts['extension'], "\n";
echo $path_parts['filename'], "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
/www/htdocs/inc
lib.inc.php
php
lib.inc
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>
     <function>pathinfo</function>-Beispiel für den Unterschied zwischen einer
     leeren und keiner Erweiterung
    </title>
    <programlisting role="php">
<![CDATA[
<?php
$path_parts = pathinfo('/path/emptyextension.');
var_dump($path_parts['extension']);

$path_parts = pathinfo('/path/noextension');
var_dump($path_parts['extension']);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
string(0) ""

Notice: Undefined index: extension in test.php on line 6
NULL
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><function>pathinfo</function>-Beispiel für eine Punktdatei</title>
    <programlisting role="php">
<![CDATA[
<?php
print_r(pathinfo('/some/path/.test'));
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Array
(
    [dirname] => /some/path
    [basename] => .test
    [extension] => test
    [filename] =>
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><function>pathinfo</function>-Beispiel mit Array-Dereferenzierung</title>
    <para>
     Der Parameter <parameter>flags</parameter> ist keine Bitmaske. Es kann
     nur ein einziger Wert angegeben werden. Um nur eine begrenzte Menge von
     geparsten Werten auszuwählen, kann das Array wie folgt zerlegt werden:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
['basename' => $basename, 'dirname' => $dirname] = pathinfo('/www/htdocs/inc/lib.inc.php');

var_dump($basename, $dirname);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
string(11) "lib.inc.php"
string(15) "/www/htdocs/inc"
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>dirname</function></member>
    <member><function>basename</function></member>
    <member><function>parse_url</function></member>
    <member><function>realpath</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
