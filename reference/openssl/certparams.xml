<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 497c40ac164d5873fd87f622dfdeb5206392b446 Maintainer: jaenecke Status: ready -->

<appendix xml:id="openssl.certparams" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Schlüssel-/Zertifikatparameter</title>
 <para>
  Ziemlich viele der OpenSSL-Funktionen benötigen einen Schlüssel- oder
  Zertifikatparameter. Folgende Methoden können genutzt werden, um solche zu
  erhalten:
  <itemizedlist>
   <listitem>
    <para>
     Zertifikate
     <orderedlist>
      <listitem>
       <simpara>
        Eine <classname>OpenSSLCertificate</classname>-Instanz (oder vor PHP
        8.0.0 eine &resource; vom Typ <literal>OpenSSL X.509</literal>), die
        von <function>openssl_x509_read</function> zurückgegeben wurde.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Eine Zeichenkette mit dem Format
        <filename>file://pfad/zu/cert.pem</filename>; die angegebene Datei
        muss ein <acronym>PEM</acronym>-kodiertes Zertifikat enthalten.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Eine Zeichenkette, die den Inhalt eines Zertifikats in
        <acronym>PEM</acronym>-Kodierung enthält. Sie kann mit
        <literal>-----BEGIN CERTIFICATE-----</literal> beginnen.
       </simpara>
      </listitem>
     </orderedlist>
    </para>
   </listitem>

   <listitem>
    <para>
     Zertifikat-Signierungsanforderungen (Certificate Signing Requests, CSRs)
     <orderedlist>
      <listitem>
       <simpara>
        Eine <classname>OpenSSLCertificateSigningRequest</classname>-Instanz
        (oder vor PHP 8.0.0 eine &resource; vom Typ <literal>OpenSSL X.509
        CSR</literal>), die von <function>openssl_csr_new</function>
        zurückgegeben wurde.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Eine Zeichenkette mit dem Format
        <filename>file://path/to/csr.pem</filename>; die benannte Datei muss
        einen <acronym>PEM</acronym>-kodierten <acronym>CSR</acronym>
        enthalten.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Eine Zeichenkette, die den Inhalt eines <acronym>CSR</acronym>s in
        <acronym>PEM</acronym>-Kodierung enthält. Sie kann mit
        <literal>-----BEGIN CERTIFICATE REQUEST-----</literal> beginnen.
       </simpara>
      </listitem>
     </orderedlist>
    </para>
   </listitem>

   <listitem>
    <para>
     Öffentliche/Private Schlüssel
     <orderedlist>
      <listitem>
       <simpara>
        Eine <classname>OpenSSLAsymmetricKey</classname>-Instanz (oder vor PHP
        8.0.0 eine &resource; vom Typ <literal>OpenSSL-Schlüssel</literal>),
        die von <function>openssl_get_publickey</function> oder
        <function>openssl_get_privatekey</function> zurückgegeben wurde.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Nur für öffentliche Schlüssel: eine
        <classname>OpenSSLCertificate</classname>-Instanz (oder vor PHP 8.0.0
        eine &resource; vom Typ <literal>OpenSSL X.509</literal>).
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Eine Zeichenkette mit dem Format
        <filename>file://pfad/zu/datei.pem</filename> - die angegebene Datei
        muss ein <acronym>PEM</acronym>-kodiertes Zertifikat und/oder einen
        <acronym>PEM</acronym>-kodierten privaten Schlüssel enthalten.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Eine Zeichenkette, die den Inhalt eines Zertifikats/Schlüssels in
        <acronym>PEM</acronym>-Kodierung enthält. Sie kann mit
        <literal>-----BEGIN PUBLIC KEY-----</literal> beginnen.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Für private Schlüssel können Sie auch die Syntax <literal>array($key,
        $passphrase)</literal> verwenden. <varname>$key</varname>
        repräsentiert einen Schlüssel, den Sie entweder mit der Notation
        file:// oder dem textlichen Inhalt wie oben angeben.
        <varname>$passphrase</varname> ist eine Zeichenfolge, die die
        Passphrase für den privaten Schlüssel enthält.
       </simpara>
      </listitem>
     </orderedlist>
    </para>
   </listitem>
  </itemizedlist>
 </para>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
