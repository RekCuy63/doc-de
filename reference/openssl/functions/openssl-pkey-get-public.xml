<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 497c40ac164d5873fd87f622dfdeb5206392b446 Maintainer: nobody Status: ready -->
<refentry xml:id="function.openssl-pkey-get-public" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>openssl_pkey_get_public</refname>
  <refpurpose>
   Extrahiert einen öffentlichen Schlüssel aus einem Zertifikat und bereitet
   diesen zur Verwendung vor
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>OpenSSLAsymmetricKey</type><type>false</type></type><methodname>openssl_pkey_get_public</methodname>
   <methodparam><type class="union"><type>OpenSSLAsymmetricKey</type><type>OpenSSLCertificate</type><type>array</type><type>string</type></type><parameter>public_key</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>openssl_pkey_get_public</function> extrahiert den öffentlichen
   Schlüssel aus <parameter>public_key</parameter> und bereitet ihn für die
   Verwendung durch andere Funktionen vor.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>public_key</parameter></term>
     <listitem>
      <para>
       <parameter>public_key</parameter> kann folgendes sein:
       <orderedlist>
        <listitem>
         <simpara>
          Eine <classname>OpenSSLAsymmetricKey</classname>-Instanz.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          Eine Zeichenkette im Format
          <filename>file://path/to/file.pem</filename>. Die angegebene Datei
          muss ein <acronym>PEM</acronym>-kodiertes Zertifikat und/oder einen
          öffentlichen Schlüssel enthalten.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          Ein öffentlicher Schlüssel im <acronym>PEM</acronym>-Format.
         </simpara>
        </listitem>
       </orderedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt bei Erfolg eine <classname>OpenSSLAsymmetricKey</classname>-Instanz
   zurück oder &false;, wenn ein Fehler auftritt.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Bei Erfolg gibt diese Funktion nun eine
       <classname>OpenSSLAsymmetricKey</classname>-Instanz zurück; vorher
       wurde eine &resource; vom Typ <literal>OpenSSL-Schlüssel</literal>
       zurückgegeben.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>public_key</parameter> akzeptiert nun eine
       <classname>OpenSSLAsymmetricKey</classname>- oder
       <classname>OpenSSLCertificate</classname>-Instanz; vorher wurde eine
       &resource; vom Typ <literal>OpenSSL-Schlüssel</literal> oder
       <literal>OpenSSL X.509</literal> akzeptiert.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
