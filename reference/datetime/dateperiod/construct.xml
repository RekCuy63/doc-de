<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 7d81260767f008218ffd338b365cfa3d10eb3d15 Maintainer: cmb Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: e2c7b3635d5353c05c248c29038bf9d5b7133d6e Reviewer: samesch -->

<refentry xml:id="dateperiod.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>DatePeriod::__construct</refname>
  <refpurpose>Erstellt ein neues DatePeriod-Objekt</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis role="DatePeriod">
   <modifier>public</modifier> <methodname>DatePeriod::__construct</methodname>
   <methodparam><type>DateTimeInterface</type><parameter>start</parameter></methodparam>
   <methodparam><type>DateInterval</type><parameter>interval</parameter></methodparam>
   <methodparam><type>int</type><parameter>recurrences</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
  </constructorsynopsis>
  <constructorsynopsis role="DatePeriod">
   <modifier>public</modifier> <methodname>DatePeriod::__construct</methodname>
   <methodparam><type>DateTimeInterface</type><parameter>start</parameter></methodparam>
   <methodparam><type>DateInterval</type><parameter>interval</parameter></methodparam>
   <methodparam><type>DateTimeInterface</type><parameter>end</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
  </constructorsynopsis>
  <warning>
   <constructorsynopsis role="DatePeriod">
    <modifier>public</modifier> <methodname>DatePeriod::__construct</methodname>
    <methodparam><type>string</type><parameter>isostr</parameter></methodparam>
    <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
   </constructorsynopsis>
   <simpara>
    Diese Variante des Konstruktors ist veraltet; stattdessen sollte
    <methodname>DatePeriod::createFromISO8601String</methodname> verwendet
    werden.
   </simpara>
  </warning>
  <para>
   Erstellt ein neues DatePeriod-Objekt.
  </para>
  <para>
   <classname>DatePeriod</classname>-Objekte können als Iterator verwendet
   werden, um aus einem <parameter>start</parameter>-Datum, einem
   <parameter>interval</parameter> und einem <parameter>end</parameter>-Datum
   oder der Anzahl der <parameter>recurrences</parameter> (Wiederholungen)
   eine Reihe von <classname>DateTimeImmutable</classname>- oder
   <classname>DateTime</classname>-Objekten zu erzeugen.
  </para>
  <para>
   Die Klasse der zurückgegebenen Objekte entspricht der
   <classname>DateTimeImmutable</classname>- oder
   <classname>DateTime</classname>-Elternklasse des
   <parameter>start</parameter>-Objekts.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>start</parameter></term>
     <listitem>
      <para>
       Das Startdatum des Zeitraums; wird standardmäßig in die Ergebnismenge
       aufgenommen.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>interval</parameter></term>
     <listitem>
      <para>
       Das Intervall zwischen den Wiederholungen innerhalb des Zeitraums.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>recurrences</parameter></term>
     <listitem>
      <para>
       Die Anzahl der Wiederholungen. Die Anzahl der zurückgegebenen Ergebnisse
       ist um eins größer, da das Startdatum standardmäßig in die Ergebnismenge
       aufgenommen wird; muss größer als <literal>0</literal> sein.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>end</parameter></term>
     <listitem>
      <para>
       Das Enddatum des Zeitraums; wird standardmäßig nicht in die
       Ergebnismenge aufgenommen.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>isostr</parameter></term>
     <listitem>
      <para>
       Eine Teilmenge der
       <link xlink:href="&url.iso-8601.repeating_intervals;">ISO-8601-Spezifikation für sich wiederholende Intervalle</link>.
      </para>
      <para>
       Beispiele für Features der ISO-8601-Spezifikation für Intervalle, die
       von PHP nicht unterstützt werden, sind:
      </para>
      <orderedlist>
       <listitem>
        <simpara>
         null Vorkommen (<literal>R0/</literal>)
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         andere Zeitabweichungen als UTC (<literal>Z</literal>), wie
         <literal>+02:00</literal>.
        </simpara>
       </listitem>
      </orderedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Ein Bitfeld, mit dem ein bestimmtes Verhalten bezüglich der Start- und
       Enddaten gesteuert werden kann.
      </para>
      <para>
       Mit <constant>DatePeriod::EXCLUDE_START_DATE</constant> wird das
       Startdatum aus der Menge der wiederkehrenden Termine innerhalb des
       Zeitraums ausgeschlossen.
      </para>
      <para>
       Mit <constant>DatePeriod::INCLUDE_END_DATE</constant> wird das Enddatum
       in die Menge der wiederkehrenden Termine innerhalb des Zeitraums
       aufgenommen.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Wenn <parameter>isostr</parameter> nicht als gültiger ISO-8601-Zeitraum
   geparst werden kann, wird eine
   <classname>DateMalformedPeriodStringException</classname> geworfen. Vor
   PHP 8.3 wird eine <exceptionname>Exception</exceptionname> geworfen.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.3.0</entry>
       <entry>
        Wirft nun eine
        <exceptionname>DateMalformedPeriodStringException</exceptionname>
        anstelle von <exceptionname>Exception</exceptionname>.
       </entry>
      </row>
      <row>
       <entry>8.2.0</entry>
       <entry>
        Die Konstante <constant>DatePeriod::INCLUDE_END_DATE</constant> wurde
        hinzugefügt.
       </entry>
      </row>
      <row>
       <entry>7.2.19, 7.3.6, 7.4.0</entry>
       <entry>
        <parameter>recurrences</parameter> muss jetzt größer als
        <literal>0</literal> sein.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>DatePeriod-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$start = new DateTime('2012-07-01');
$interval = new DateInterval('P7D');
$end = new DateTime('2012-07-31');
$recurrences = 4;
$iso = 'R4/2012-07-01T00:00:00Z/P7D';

// Alle diese Zeiträume sind gleichwertig.
$period = new DatePeriod($start, $interval, $recurrences);
$period = new DatePeriod($start, $interval, $end);
$period = new DatePeriod($iso);

// Durch Iterieren über das DatePeriod-Objekt, werden alle sich
// wiederholenden Termine innerhalb des Zeitraums ausgegeben.
foreach ($period as $date) {
    echo $date->format('Y-m-d')."\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
2012-07-01
2012-07-08
2012-07-15
2012-07-22
2012-07-29
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>DatePeriod-Beispiel mit <constant>DatePeriod::EXCLUDE_START_DATE</constant></title>
    <programlisting role="php">
<![CDATA[
<?php
$start = new DateTime('2012-07-01');
$interval = new DateInterval('P7D');
$end = new DateTime('2012-07-31');

$period = new DatePeriod($start, $interval, $end,
                         DatePeriod::EXCLUDE_START_DATE);

// Durch Iterieren über das DatePeriod-Objekt werden alle sich
// wiederholenden Termine innerhalb des Zeitraums ausgegeben.
// Es ist zu beachten, dass in diesem Fall 2012-07-01 nicht ausgegeben wird.
foreach ($period as $date) {
    echo $date->format('Y-m-d')."\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
2012-07-08
2012-07-15
2012-07-22
2012-07-29
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Ein DatePeriod-Beispiel, das alle letzten Donnerstage eines Jahres anzeigt</title>
    <programlisting role="php">
<![CDATA[
<?php
$begin = new DateTime('2021-12-31');
$end = new DateTime('2022-12-31 23:59:59');

$interval = DateInterval::createFromDateString('last thursday of next month');
$period = new DatePeriod($begin, $interval, $end, DatePeriod::EXCLUDE_START_DATE);

foreach ($period as $dt) {
    echo $dt->format('l Y-m-d'), "\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Thursday 2022-01-27
Thursday 2022-02-24
Thursday 2022-03-31
Thursday 2022-04-28
Thursday 2022-05-26
Thursday 2022-06-30
Thursday 2022-07-28
Thursday 2022-08-25
Thursday 2022-09-29
Thursday 2022-10-27
Thursday 2022-11-24
Thursday 2022-12-29
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <simpara>
   Die unbegrenzte Anzahl von Wiederholungen, wie von ISO 8601, Abschnitt 4.5
   "Recurring time interval" spezifiziert, wird nicht unterstützt, &dh; weder
   die Übergabe von <literal>"R/..."</literal> an
   <parameter>isostr</parameter> noch die Übergabe von &null; an
   <parameter>end</parameter> funktioniert.
  </simpara>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
