<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 26cf98b63af3d5dd9793055596d2996851e65ffe Maintainer: sammywg Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: f5bd78b3c2c48b8702bc1547a08a9ad592047c1c Reviewer: samesch -->
<refentry xml:id="function.strtotime" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>strtotime</refname>
  <refpurpose>Wandelt eine textuelle englische Datums- und Zeitbeschreibung in einen Unix-Zeitstempel um</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>strtotime</methodname>
   <methodparam><type>string</type><parameter>datetime</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>baseTimestamp</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   Diese Funktion erwartet eine Zeichenkette mit einem Datum im englischen
   Datumsformat und versucht, dieses Format in einen Unix-Zeitstempel (die
   Anzahl der Sekunden seit dem 1. Januar 1970 00:00:00 UTC) zu übersetzen.
   Die Angabe wird relativ zum Zeitstempel ausgewertet, der im Parameter
   <parameter>baseTimestamp</parameter> übergebenen wurde, oder,
   falls <parameter>baseTimestamp</parameter> nicht übergeben wurde, relativ
   zur aktuellen Zeit. Das Format der Zeichenkette, die das auszuwertende
   Datum enthält, ist in
   <link linkend="datetime.formats">Unterstützte Datums- und Zeitformate</link>
   definiert, wobei einige Feinheiten zu beachten sind. Es wird dringend
   empfohlen, sich dort mit allen Details vertraut zu machen.
  </simpara>
  <warning>
   <para>
    Der Unix-Zeitstempel, den diese Funktion zurückgibt, enthält keine
    Informationen über Zeitzonen. Um Berechnungen mit Datums- und Zeitwerten
    durchzuführen, sollte das leistungsfähigere
    <classname>DateTimeImmutable</classname> verwendet werden.
   </para>
  </warning>
  <para>
   Jeder Parameter dieser Funktion verwendet die Standardzeitzone, es sei
   denn, im betreffenden Parameter wird eine Zeitzone angegeben. Es ist darauf
   zu achten, nicht etwa verschiedene Zeitzonen je Parameter zu verwenden,
   außer es ist beabsichtigt. Die verschiedenen Möglichkeiten, die
   Standardzeitzone zu definieren, sind
   <function>date_default_timezone_get</function> zu entnehmen.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>datetime</parameter></term>
     <listitem>
      <para>&date.formats.parameter;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>baseTimestamp</parameter></term>
     <listitem>
      <para>
       Der Zeitstempel, der als Basis zur Berechnung relativer Daten verwendet
       wird.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt im Erfolgsfall einen Zeitstempel zurück, andernfalls &false;.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;

   &date.timezone.errors.description;

 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>baseTimestamp</parameter> ist nun nullable (akzeptiert den
        &null;-Wert).
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ein <function>strtotime</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
echo strtotime("now"), "\n";
echo strtotime("10 September 2000"), "\n";
echo strtotime("+1 day"), "\n";
echo strtotime("+1 week"), "\n";
echo strtotime("+1 week 2 days 4 hours 2 seconds"), "\n";
echo strtotime("next Thursday"), "\n";
echo strtotime("last Monday"), "\n";
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Test auf Fehler</title>
    <programlisting role="php">
<![CDATA[
<?php
$str = 'Not Good';

if (($timestamp = strtotime($str)) === false) {
    echo "Die Zeichenkette ($str) ist fehlerhaft.";
} else {
    echo "$str == " . date('l dS \o\f F Y h:i:s A', $timestamp);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    "Relatives" Datum bedeutet in diesem Fall auch, dass nicht angegebene
    Komponenten des Datums-/Zeitstempels unverändert aus dem
    <parameter>baseTimestamp</parameter> übernommen werden. Das heißt, dass
    <code>strtotime('February')</code> am 31. Mai 2022 als
    <literal>31 February 2022</literal> interpretiert wird, was zum
    Zeitstempel <literal>3 March</literal> führt (in einem Schaltjahr wäre es
    <literal>2 March</literal>). Stattdessen
    <code>strtotime('1 February')</code> oder
    <code>strtotime('first day of February')</code> zu verwenden, würde dieses
    Problem vermeiden.
   </para>
  </note>
  <note>
   <para>
    Wenn die Angabe der Jahreszahl zweistellig erfolgt, werden Werte von 0-69
    den Jahren 2000-2069 zugeordnet, die Werte 70-99 ergeben die Jahreszahlen
    1970-1999. Zu möglichen Unterschieden auf 32-Bit-Systemen (mögliche
    Datumsangaben könnten am 2038-01-19 03:14:07 enden) ist der folgende
    Hinweis zu beachten.
   </para>
  </note>
  <note>
   <para>
    Der gültige Bereich eines Zeitstempels liegt typischerweise zwischen
    Fri, 13 Dec 1901 20:45:54 UTC und Tue, 19 Jan 2038 03:14:07 UTC
    (das sind die Datumsangaben, die dem minimalen und maximalen Wert eines
    vorzeichenbehafteten 32-bit Integer entsprechen).
   </para>
   <para>
    Bei 64-Bit-Versionen von PHP ist der gültige Bereich für Zeitstempel
    praktisch unendlich groß, da 64 Bit etwa 293 Milliarden Jahre in beide
    Richtungen darstellen können.
   </para>
  </note>
  <note>
   <para>
    Es ist nicht empfehlenswert, diese Funktion für mathematische Berechnungen
    zu verwenden. Dafür sollten stattdessen
    <methodname>DateTime::add</methodname> und
    <methodname>DateTime::sub</methodname> verwendet werden.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="datetime.formats">Datums- und Zeitformate</link></member>
    <member><methodname>DateTime::createFromFormat</methodname></member>
    <member><function>checkdate</function></member>
    <member><function>strptime</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
