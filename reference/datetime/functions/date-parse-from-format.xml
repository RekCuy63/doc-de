<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 4d13f5e4b45f699eb855a5e84736aeda2ebd142a Maintainer: samesch Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.date-parse-from-format" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>date_parse_from_format</refname>
  <refpurpose>Ermittelt Informationen über das angegebene Datum anhand des angegebenen Formats</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>date_parse_from_format</methodname>
   <methodparam><type>string</type><parameter>format</parameter></methodparam>
   <methodparam><type>string</type><parameter>datetime</parameter></methodparam>
  </methodsynopsis>
  <para>
   Gibt ein assoziatives Array mit detaillierten Informationen über das
   angegebene Datum und die angegebene Uhrzeit zurück.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>format</parameter></term>
     <listitem>
      <para>
       Zur Verwendung des Parameters <parameter>format</parameter> siehe die
       Dokumentation von
       <function>DateTimeImmutable::createFromFormat</function>. Es gelten die
       gleichen Regeln.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>datetime</parameter></term>
     <listitem>
      <para>
       Eine Zeichenkette, die Datum und Uhrzeit angibt.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <!-- See also &return.success; -->
  <para>
   Gibt ein assoziatives Array mit detaillierten Informationen über das
   angegebene Datum und die angegebene Uhrzeit zurück.
  </para>
  <para>
   Das zurückgegebene Array hat Schlüssel für <literal>year</literal>,
   <literal>month</literal>, <literal>day</literal>, <literal>hour</literal>,
   <literal>minute</literal>, <literal>second</literal>,
   <literal>fraction</literal> und <literal>is_localtime</literal>.
  </para>
  <para>
   Wenn <literal>is_localtime</literal> angegeben ist, gibt
   <literal>zone_type</literal> den Typ der Zeitzone an. Für Typ
   <literal>1</literal> (UTC-Offset) werden die Felder <literal>zone</literal>
   und <literal>is_dst</literal> hinzugefügt; für Typ <literal>2</literal>
   (Zeitzonen-Abkürzung) werden die Felder <literal>tz_abbr</literal> und
   <literal>is_dst</literal> hinzugefügt; und für Typ <literal>3</literal>
   (Zeitzonen-Kennung) werden die Felder <literal>tz_abbr</literal> und
   <literal>tz_id</literal> hinzugefügt.
  </para>
  <para>
   Das Array enthält die Felder <literal>warning_count</literal> und
   <literal>warnings</literal>. Das erste gibt an, wie viele Warnungen es gab.
   Die Schlüssel des Arrays <literal>warnings</literal> geben die Positionen
   im angegebenen <parameter>datetime</parameter> an, an denen die Warnungen
   aufgetreten sind, während die Werte die Warnungen selbst beschreiben. Das
   folgende Beispiel zeigt eine solche Warnung.
  </para>
  <para>
   Das Array enthält auch die Felder <literal>error_count</literal> und
   <literal>errors</literal>. Das erste Feld gibt an, wie viele Fehler
   gefunden wurden. Die Schlüssel des Arrays <literal>errors</literal> geben
   die Positionen im angegebenen <parameter>datetime</parameter> an, an denen
   die Fehler aufgetreten sind, während die Werte die Fehler selbst
   beschreiben. Das folgende Beispiel zeigt einen solchen Fehler.
  </para>
  <warning>
   <para>
    Die Anzahl der Array-Elemente in den Arrays <literal>warnings</literal>
    und <literal>errors</literal> kann kleiner sein als
    <literal>warning_count</literal> oder <literal>error_count</literal>, wenn
    die Warnungen bzw. Fehler an derselben Stelle aufgetreten sind.
   </para>
  </warning>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Wenn der Parameter <parameter>datetime</parameter> NULL-Bytes enthält,
   wirft diese Funktion einen <exceptionname>ValueError</exceptionname>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.21, 8.1.8, 8.2.0</entry>
      <entry>
       Wenn in <parameter>datetime</parameter> NULL-Bytes übergeben werden,
       wird nun ein <exceptionname>ValueError</exceptionname> geworfen; vorher
       wurde dies stillschweigend ignoriert.
      </entry>
     </row>
     <row>
      <entry>7.2.0</entry>
      <entry>
       Das Element <literal>zone</literal> des zurückgegebenen Arrays stellt
       nun Sekunden statt Minuten dar und das Vorzeichen ist umgekehrt. Zum
       Beispiel wird aus <literal>-120</literal> nun <literal>7200</literal>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>date_parse_from_format</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$date = "6.1.2009 13:00+01:00";
print_r(date_parse_from_format("j.n.Y H:iP", $date));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [year] => 2009
    [month] => 1
    [day] => 6
    [hour] => 13
    [minute] => 0
    [second] => 0
    [fraction] =>
    [warning_count] => 0
    [warnings] => Array
        (
        )

    [error_count] => 0
    [errors] => Array
        (
        )

    [is_localtime] => 1
    [zone_type] => 1
    [zone] => 3600
    [is_dst] =>
)
]]>
    </screen>
   </example>
  </para>

  <para>
   <example>
    <title><function>date_parse_from_format</function>-Beispiel mit Warnungen</title>
    <programlisting role="php">
<![CDATA[
<?php
$date = "26 August 2022 22:30 pm";
$parsed = date_parse_from_format("j F Y G:i a", $date);

echo "Anzahl der Warnungen: ", $parsed['warning_count'], "\n";
foreach ($parsed['warnings'] as $position => $message) {
    echo "\tAn Position {$position}: {$message}\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Anzahl der Warnungen: 1
	An Position 23: The parsed time was invalid
]]>
    </screen>
   </example>
  </para>

  <para>
   <example>
    <title><function>date_parse_from_format</function>-Beispiel mit Fehlern</title>
    <programlisting role="php">
<![CDATA[
<?php
$date = "26 August 2022 CEST";
$parsed = date_parse_from_format("j F Y H:i", $date);

echo "Anzahl der Fehler: ", $parsed['error_count'], "\n";
foreach ($parsed['errors'] as $position => $message) {
    echo "\tAn Position {$position}: {$message}\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Anzahl der Fehler: 3
	An Position 15: A two digit hour could not be found
	An Position 19: Data missing
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>DateTimeImmutable::createFromFormat</function></member>
    <member><function>checkdate</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
