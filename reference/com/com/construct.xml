<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 7f99d5e488d161ce3b12d1dae405a283728933c3 Maintainer: nobody Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: 1.0 Reviewer: samesch -->
<refentry xml:id="com.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>com::__construct</refname>
  <refpurpose>Der com-Klassenkonstruktor</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis>
   <modifier>public</modifier> <methodname>com::__construct</methodname>
   <methodparam><type>string</type><parameter>module_name</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>string</type><type>null</type></type><parameter>server_name</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>codepage</parameter><initializer><constant>CP_ACP</constant></initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>typelib</parameter><initializer>""</initializer></methodparam>
  </constructorsynopsis>
  <para>
   Erstellt ein neues com-Objekt.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>module_name</parameter></term>
    <listitem>
     <simpara>
      Kann eine ProgID, Klassen-ID oder der Moniker der zu ladenden Komponente
      sein.
     </simpara>
     <simpara>
      Eine ProgID ist typischerweise der Applikations- oder DLL-Name, gefolgt
      von einem Punkt, gefolgt vom Objektnamen, z. B.
      <literal>Word.Application</literal>
     </simpara>
     <simpara>
      Eine Klassen-ID ist die UUID, die eine bestimmte Klasse eindeutig
      identifiziert.
     </simpara>
     <simpara>
      Ein Moniker ist eine spezielle Form der Benennung, die dem Konzept eines
      URL-Schemas ähnelt, das eine Ressource identifiziert und angibt, wie sie
      geladen werden soll. Beispielsweise könnten Sie Word laden und ein
      Objekt erzeugen, das ein Word-Dokument repräsentiert, indem Sie den
      vollständigen Pfad zum Word-Dokument als Modulnamen angeben, oder Sie
      können <literal>LDAP:</literal> als einen Moniker verwenden, um das
      ADSI-Interface zu LDAP zu nutzen.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>server_name</parameter></term>
    <listitem>
     <simpara>
      Der Name des DCOM-Servers, auf dem die Komponente geladen und ausgeführt
      werden soll. Falls &null;, wird das Objekt mit dem Standardwert für
      diese Applikation ausgeführt. Der Standardwert ist typischerweise die
      Ausführung auf der lokalen Maschine, obwohl der Administrator die
      Applikation so konfiguriert haben kann, dass sie auf einer anderen
      Maschine startet.
     </simpara>
     <simpara>
      Wenn Sie einen Nicht-&null;-Wert für den Server angeben, wird PHP das
      Laden des Objekts zurückweisen, wenn nicht auch die Konfigurationsoption
      <xref linkend="ini.com.allow-dcom"/> auf &true; gesetzt ist.
     </simpara>
     <para>
      Wenn <parameter>server_name</parameter> ein Array ist, sollte es die
      folgenden Elemente enthalten (Groß- und Kleinschreibung wird
      berücksichtigt!). Beachten Sie, dass alle Elemente optional sind (obwohl
      Sie bei der Angabe eines Benutzernamens auch ein Passwort angeben
      müssen). Wenn Sie die Server-Einstellung weglassen, wird der
      Standardserver verwendet (wie oben beschrieben) und die Instanziierung
      des Objekts ist nicht von der
      <xref linkend="ini.com.allow-dcom"/>-Direktive betroffen.
      <table>
       <title>DCOM-Servername</title>
       <tgroup cols="3">
        <thead>
         <row>
          <entry>Schlüssel</entry>
          <entry>Typ</entry>
          <entry>Beschreibung</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>Server</entry>
          <entry>string</entry>
          <entry>Der Name des Servers.</entry>
         </row>
         <row>
          <entry>Username</entry>
          <entry>string</entry>
          <entry>Der Benutzername, der für die Verbindung verwendet wird.</entry>
         </row>
         <row>
          <entry>Password</entry>
          <entry>string</entry>
          <entry>Das Passwort für <literal>Benutzername</literal>.</entry>
         </row>
         <row>
          <entry>Domain</entry>
          <entry>string</entry>
          <entry>Die Domain des <literal>Server</literal>s.</entry>
         </row>
         <row>
          <entry>Flags</entry>
          <entry>integer</entry>
          <entry>
           Eine oder mehrere der folgenden Konstanten, mittels logischem ODER
           verknüpft: <constant>CLSCTX_INPROC_SERVER</constant>,
           <constant>CLSCTX_INPROC_HANDLER</constant>,
           <constant>CLSCTX_LOCAL_SERVER</constant>,
           <constant>CLSCTX_REMOTE_SERVER</constant>,
           <constant>CLSCTX_SERVER</constant> und
           <constant>CLSCTX_ALL</constant>. Wenn nichts anderes angegeben ist,
           wird als Standardwert <constant>CLSCTX_SERVER</constant>
           angenommen, sofern auch der <literal>Server</literal> weggelassen
           wurde. Ist der Server angegeben, wird
           <constant>CLSCTX_REMOTE_SERVER</constant> verwendet. Weitere
           Informationen über die Bedeutung dieser Konstanten können der
           Microsoft-Dokumentation für CoCreateInstance entnommen werden; in
           der Regel werden sie nie benötigt.
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>codepage</parameter></term>
    <listitem>
     <simpara>
      Gibt die Codepage an, die verwendet wird, um Zeichenketten nach Unicode
      und zurück umzuwandeln. Die Umwandlung wird immer dann durchgeführt,
      wenn eine PHP-Zeichenkette als Parameter übergeben oder von einer
      Methode dieses COM-Objekts zurückgegeben wird. Die Codepage ist
      beständig, was bedeutet, dass sie sich auf Objekte und Varianten, die
      von dem Objekt zurückgegeben werden, fortpflanzt.
     </simpara>
     <simpara>
      Mögliche Werte sind <constant>CP_ACP</constant> (verwende die
      Standard-ANSI-Codepage des Systems - das ist der Standardwert, wenn
      dieser Parameter ausgelassen wird), <constant>CP_MACCP</constant>,
      <constant>CP_OEMCP</constant>, <constant>CP_SYMBOL</constant>,
      <constant>CP_THREAD_ACP</constant> (verwende die Codepage/Locale, die
      für den aktuell ausgeführten Thread angegeben wurde),
      <constant>CP_UTF7</constant> und <constant>CP_UTF8</constant>. Ebenfalls
      kann die Nummer einer bestimmten Codepage verwendet werden; weitere
      Details zu Codepages und ihren numerischen Werten können der
      Microsoft-Dokumentation entnommen werden.
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
