<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 8708c464d3a380e2e728e05e3ea015e73fa8d371 Maintainer: samesch Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="mysqli.execute-query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::execute_query</refname>
  <refname>mysqli_execute_query</refname>
  <refpurpose>Bereitet eine SQL-Anweisung vor, bindet die Parameter und führt die Anweisung aus</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <modifier>public</modifier> <type class="union"><type>mysqli_result</type><type>bool</type></type><methodname>mysqli::execute_query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>null</type></type><parameter>params</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis role="procedural">
   <type class="union"><type>mysqli_result</type><type>bool</type></type><methodname>mysqli_execute_query</methodname>
   <methodparam><type>mysqli</type><parameter>mysql</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>null</type></type><parameter>params</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Bereitet eine SQL-Anweisung vor, bindet die Parameter und führt die
   Anweisung aus. Die Methode <methodname>mysqli::execute_query</methodname>
   ist eine Zusammenfassung von <methodname>mysqli::prepare</methodname>,
   <methodname>mysqli_stmt::bind_param</methodname>,
   <methodname>mysqli_stmt::execute</methodname> und
   <methodname>mysqli_stmt::get_result</methodname>.
  </para>
  <para>
   Die Anweisungsvorlage darf null oder mehr Fragezeichen-Parametermarker
   (<literal>?</literal>) - auch Platzhalter genannt - enthalten. Die
   Parameterwerte müssen mit dem Parameter <parameter>params</parameter> als
   &array; angegeben werden.
  </para>
  <para>
   Eine vorbereitete Anweisung wird im Hintergrund erstellt und ist nie
   außerhalb der Funktion sichtbar. Es ist unmöglich, auf die Eigenschaften
   der Anweisung zuzugreifen, wie es mit einem
   <classname>mysqli_stmt</classname>-Objekt möglich wäre. Aufgrund dieser
   Einschränkung werden die Statusinformationen in das
   <classname>mysqli</classname>-Objekt kopiert und stehen über dessen
   Methoden, &zb; <function>mysqli_affected_rows</function> oder
   <function>mysqli_error</function>, zur Verfügung.
  </para>
  <note>
   <para>
    Wenn eine Anweisung an <function>mysqli_execute_query</function> übergeben
    wird, die größer ist als die vom Server maximal erlaubte Paketgröße
    (<literal>max_allowed_packet</literal>), hängen die zurückgegebenen
    Fehlercodes vom Betriebssystem ab. Die Funktion verhält sich wie folgt:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Unter Linux gibt sie den Fehlercode 1153 zurück. Diese Fehlermeldung
      bedeutet <quote>got a packet bigger than
      <literal>max_allowed_packet</literal> bytes</quote>.
     </para>
    </listitem>
    <listitem>
     <para>
      Unter Windows gibt sie den Fehlercode 2006 zurück. Diese Fehlermeldung
      bedeutet <quote>server has gone away</quote>.
     </para>
    </listitem>
   </itemizedlist>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.link.description;
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       Die Zeichenkette mit der Abfrage. Sie darf nur eine SQL-Anweisung
       enthalten.
      </para>
      <para>
       Die SQL-Anweisung darf null oder mehr Platzhalter für Parameter
       enthalten, die an den entsprechenden Stellen durch Fragezeichen
       (<literal>?</literal>) dargestellt werden.
      </para>
      <note>
<!-- Copied from https://dev.mysql.com/doc/c-api/8.0/en/mysql-stmt-prepare.html -->
       <para>
        Die Platzhalter sind nur an bestimmten Stellen einer SQL-Anweisung
        zulässig. Zum Beispiel sind sie bei einer
        <literal>INSERT</literal>-Anweisung in der
        <literal>VALUES()</literal>-Liste erlaubt, um die Werte für die
        Spalten einer Zeile anzugeben, oder bei einer
        <literal>WHERE</literal>-Klausel im Vergleich mit einer Spalte, um
        einen Vergleichswert anzugeben. Nicht zulässig sind sie hingegen für
        Bezeichner (wie Tabellen- oder Spaltennamen).
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>params</parameter></term>
     <listitem>
      <para>
       Eine optionale &array;-Liste mit so vielen Elementen, wie es gebundene
       Parameter in der auszuführenden SQL-Anweisung gibt. Jeder Wert wird wie
       eine Zeichenkette behandelt.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt bei einem Fehler &false; zurück. Bei erfolgreichen Abfragen, die eine
   Ergebnismenge erzeugen, also &zb; <literal>SELECT, SHOW, DESCRIBE</literal>
   oder <literal>EXPLAIN</literal>, wird ein
   <classname>mysqli_result</classname>-Objekt zurückgegeben. Bei anderen
   erfolgreichen Abfragen wird &true; zurückgegeben.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><methodname>mysqli::execute_query</methodname>-Beispiel</title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$mysqli = new mysqli('localhost', 'my_user', 'my_password', 'world');

$query = 'SELECT Name, District FROM City WHERE CountryCode=? ORDER BY Name LIMIT 5';
$result = $mysqli->execute_query($query, ['DEU']);
foreach ($result as $row) {
    printf("%s (%s)\n", $row["Name"], $row["District"]);
}
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$link = mysqli_connect("localhost", "my_user", "my_password", "world");

$query = 'SELECT Name, District FROM City WHERE CountryCode=? ORDER BY Name LIMIT 5';
$result = mysqli_execute_query($link, $query, ['DEU']);
foreach ($result as $row) {
    printf("%s (%s)\n", $row["Name"], $row["District"]);
}
]]>
   </programlisting>
   &examples.outputs.similar;
   <screen>
<![CDATA[
Aachen (Nordrhein-Westfalen)
Augsburg (Baijeri)
Bergisch Gladbach (Nordrhein-Westfalen)
Berlin (Berliini)
Bielefeld (Nordrhein-Westfalen)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_prepare</function></member>
    <member><function>mysqli_stmt_execute</function></member>
    <member><function>mysqli_stmt_bind_param</function></member>
    <member><function>mysqli_stmt_get_result</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
