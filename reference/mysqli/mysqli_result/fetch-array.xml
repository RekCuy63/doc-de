<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 11731a4f734bf335e8590fcd4f50be807dabcfb7 Maintainer: samesch Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="mysqli-result.fetch-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli_result::fetch_array</refname>
  <refname>mysqli_fetch_array</refname>
  <refpurpose>Ruft die nächste Zeile einer Ergebnismenge als assoziatives und/oder numerisches Array ab</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <modifier>public</modifier> <type class="union"><type>array</type><type>null</type><type>false</type></type><methodname>mysqli_result::fetch_array</methodname>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer><constant>MYSQLI_BOTH</constant></initializer></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis role="procedural">
   <type class="union"><type>array</type><type>null</type><type>false</type></type><methodname>mysqli_fetch_array</methodname>
   <methodparam><type>mysqli_result</type><parameter>result</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer><constant>MYSQLI_BOTH</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   Ruft eine Zeile der Daten aus der Ergebnismenge ab und gibt sie als Array
   zurück. Bei jedem weiteren Aufruf dieser Funktion wird die jeweils nächste
   Zeile der Ergebnismenge zurückgegeben oder &null;, wenn es keine weitere
   Zeile gibt.
  </para>
  <para>
   Neben der Speicherung der Daten in einem Array mit numerischen Indizes kann
   diese Funktion die Daten auch in einem assoziativen Array speichern, indem
   sie die Feldnamen der Ergebnismenge als Schlüssel verwendet
  </para>
  <para>
   Wenn zwei oder mehr Spalten des Ergebnisses den gleichen Namen haben, hat
   die letzte Spalte Vorrang und überschreibt alle vorherigen Daten. Um auf
   mehrere Spalten mit demselben Namen zuzugreifen, muss die numerisch
   indizierte Version der Zeile verwendet werden.
  </para>
  &database.field-case;
  &database.fetch-null;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.result.description;
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Dieser optionale Parameter gibt an, welcher Typ von Array aus den
       aktuellen Zeilendaten erzeugt werden soll. Die möglichen Werte für
       diesen Parameter sind die Konstanten <constant>MYSQLI_ASSOC</constant>,
       <constant>MYSQLI_NUM</constant> oder <constant>MYSQLI_BOTH</constant>.
      </para>
      <para>
       Mit der Konstante <constant>MYSQLI_ASSOC</constant> verhält sich diese
       Funktion genauso wie die Funktion
       <function>mysqli_fetch_assoc</function>, während sie sich mit
       <constant>MYSQLI_NUM</constant> genauso verhält wie die Funktion
       <function>mysqli_fetch_row</function>. Die letzte Option,
       <constant>MYSQLI_BOTH</constant>, erzeugt ein einziges Array mit den
       Eigenschaften beider Funktionen.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein Array zurück, das die abgerufene Zeile enthält oder &null;, wenn
   es in der Ergebnismenge keine weitere Zeile gibt. &return.falseforfailure;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><methodname>mysqli_result::fetch_array</methodname>-Beispiel</title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");

$query = "SELECT Name, CountryCode FROM City ORDER BY ID LIMIT 3";
$result = $mysqli->query($query);

/* numerisches Array */
$row = $result->fetch_array(MYSQLI_NUM);
printf("%s (%s)\n", $row[0], $row[1]);

/* assoziatives Array */
$row = $result->fetch_array(MYSQLI_ASSOC);
printf("%s (%s)\n", $row["Name"], $row["CountryCode"]);

/* assoziatives und numerisches Array */
$row = $result->fetch_array(MYSQLI_BOTH);
printf("%s (%s)\n", $row[0], $row["CountryCode"]);
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$mysqli = mysqli_connect("localhost", "my_user", "my_password", "world");

$query = "SELECT Name, CountryCode FROM City ORDER by ID LIMIT 3";
$result = mysqli_query($mysqli, $query);

/* numerisches Array */
$row = mysqli_fetch_array($result, MYSQLI_NUM);
printf("%s (%s)\n", $row[0], $row[1]);

/* assoziatives Array */
$row = mysqli_fetch_array($result, MYSQLI_ASSOC);
printf("%s (%s)\n", $row["Name"], $row["CountryCode"]);

/* assoziatives und numerisches Array */
$row = mysqli_fetch_array($result, MYSQLI_BOTH);
printf("%s (%s)\n", $row[0], $row["CountryCode"]);
]]>
   </programlisting>
   &examples.outputs.similar;
   <screen>
<![CDATA[
Kabul (AFG)
Qandahar (AFG)
Herat (AFG)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_fetch_assoc</function></member>
    <member><function>mysqli_fetch_column</function></member>
    <member><function>mysqli_fetch_row</function></member>
    <member><function>mysqli_fetch_object</function></member>
    <member><function>mysqli_query</function></member>
    <member><function>mysqli_data_seek</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
