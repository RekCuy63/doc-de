<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: f1e951b988e8aafe49b33bdf2f7812740c66c2d2 Maintainer: samesch Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mysql-xdevapi-collection.add" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Collection::add</refname>
  <refpurpose>Fügt einer Sammlung Dokumente hinzu</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mysql_xdevapi\CollectionAdd</type><methodname>mysql_xdevapi\Collection::add</methodname>
   <methodparam><type>mixed</type><parameter>document</parameter></methodparam>
  </methodsynopsis>
  <para>
   Fügt die angegebenen Dokumente zu einer Sammlung hinzu, wobei diese Methode
   mehrere Varianten unterstützt. Zu den Möglichkeiten gehören:
  </para>
  <orderedlist>
   <listitem>
    <para>
     Hinzufügen eines einzelnen Dokuments als JSON-Zeichenkette.
    </para>
   </listitem>
   <listitem>
    <para>
     Hinzufügen eines einzelnen Dokuments als Array:
     <literal>[ 'field' => 'value', 'field2' => 'value2' ... ]</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     Eine Mischung aus beidem, wobei in einer Operation auch mehrere Dokumente
     hinzugefügt werden können.
    </para>
   </listitem>
  </orderedlist>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>document</parameter></term>
    <listitem>
     <para>
      Ein oder mehrere Dokumente, wobei es sich entweder um JSON oder ein
      Array von Feldern mit den zugehörigen Werten handeln kann. Das Array
      darf nicht leer sein.
     </para>
     <para>
      Der MySQL-Server erzeugt für jedes Dokument automatisch einen
      eindeutigen <literal>_id</literal>-Wert (empfohlen), der jedoch auch
      manuell hinzugefügt werden kann. Dieser Wert darf noch nicht vorhanden
      sein, weil der Vorgang sonst fehlschlägt.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein CollectionAdd-Objekt zurück. Mittels execute() wird ein Ergebnis
   zurückgegeben, das verwendet werden kann, um die Anzahl der betroffenen
   Elemente abzufragen, die Anzahl der durch den Vorgang erzeugten Warnungen
   zu ermitteln oder eine Liste der erzeugten IDs für die eingefügten
   Dokumente zu erhalten.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>mysql_xdevapi\Collection::add</function>-Beispiel</title>
   <programlisting role="php">
<![CDATA[
<?php
$session = mysql_xdevapi\getSession("mysqlx://user:password@localhost");
$session->sql("DROP DATABASE IF EXISTS addressbook")->execute();
$session->sql("CREATE DATABASE addressbook")->execute();

$schema = $session->getSchema("addressbook");
$create = $schema->createCollection("people");

$collection = $schema->getCollection("people");

// Hinzufügen zweier Dokumente
$collection->add('{"name": "Fred",  "age": 21, "job": "Construction"}')->execute();
$collection->add('{"name": "Wilma", "age": 23, "job": "Teacher"}')->execute();

// Hinzufügen zweier Dokumente mit einem einzigen JSON-Objekt
$result = $collection->add(
  '{"name": "Bernie",
    "jobs": [{"title":"Cat Herder","Salary":42000}, {"title":"Father","Salary":0}],
    "hobbies": ["Sports","Making cupcakes"]}',
  '{"name": "Jane",
    "jobs": [{"title":"Scientist","Salary":18000}, {"title":"Mother","Salary":0}],
    "hobbies": ["Walking","Making pies"]}')->execute();

// Abrufen einer Liste der beim letzten add() erzeugten IDs
$ids = $result->getGeneratedIds();
print_r($ids);
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
Array
(
    [0] => 00005b6b53610000000000000056
    [1] => 00005b6b53610000000000000057
)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Wie im Beispiel gezeigt, wird ab MySQL-Server 8.0 eine eindeutige
    _id erzeugt. Wenn MySQL 5.7 verwendet wird, muss das Feld _id manuell
    definiert werden.
   </para>
  </note>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
