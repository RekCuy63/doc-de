<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: a714378ed87cdbdbde3b10ded183e8df7b243cb4 Maintainer: samesch Status: ready -->
<!-- Reviewed: no -->
<chapter xml:id="mysqlnd.overview" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Übersicht</title>
 <para>
  <emphasis role="bold">Was er nicht ist</emphasis>
 </para>
 <para>
  Der MySQL Native Driver wurde zwar als PHP-Erweiterung geschrieben, stellt
  dem PHP-Programmierer aber keine neue API zur Verfügung. Die
  Programmierer-APIs für die Verbindung zu MySQL-Datenbanken werden von den
  MySQL-Erweiterungen <literal>mysqli</literal> und PDO MYSQL bereitgestellt.
  Diese Erweiterungen können nun die Dienste des MySQL Native Drivers nutzen,
  um mit dem MySQL-Server zu kommunizieren. Daher sollte der MySQL Native
  Driver nicht als API betrachtet werden.
 </para>
 <para>
  <emphasis role="bold">Warum sollte er verwendet werden?</emphasis>
 </para>
 <para>
  Der MySQL Native Driver bietet gegenüber der MySQL Client Library eine Reihe
  von Vorteilen.
 </para>
 <para>
  Die ältere MySQL Client Library wurde von MySQL AB (jetzt Oracle
  Corporation) geschrieben und daher unter der MySQL-Lizenz veröffentlicht.
  Dies führte letztendlich dazu, dass die MySQL-Unterstützung in PHP
  standardmäßig deaktiviert war. Der MySQL Native Driver hingegen wurde als
  Teil des PHP-Projekts entwickelt und wird daher unter der PHP-Lizenz
  veröffentlicht. Damit sind die Lizenzierungsprobleme, die es in der
  Vergangenheit gab, beseitigt.
 </para>
 <para>
  Außerdem mussten die MySQL-Datenbankerweiterungen in der Vergangenheit mit
  einer Kopie der MySQL Client Library erstellt werden. Das bedeutete in der
  Regel, dass MySQL auf dem Rechner, auf dem der PHP-Quellcode erstellt wurde,
  installiert sein musste. Darüber hinaus riefen die
  MySQL-Datenbankerweiterungen die Datei der MySQL Client Library zur Laufzeit
  der PHP-Anwendungen auf, so dass die Datei auf dem System installiert sein
  musste. Mit dem MySQL Native Driver ist das nicht mehr der Fall, weil er in
  der Standarddistribution enthalten ist. Es ist also nicht erforderlich,
  MySQL zu installieren, um PHP zu entwickeln oder PHP-Datenbankanwendungen
  auszuführen.
 </para>
 <para>
  Da der MySQL Native Driver als PHP-Erweiterung geschrieben wurde, ist er eng
  an die Funktionsweise von PHP gekoppelt. Dies führt insbesondere bei der
  Speichernutzung zu einer höheren Effizienz, weil der Treiber das
  Speicherverwaltungssystem von PHP nutzt. Außerdem unterstützt er das
  PHP-Speicherlimit. Mit dem MySQL Native Driver wird eine vergleichbare oder
  sogar bessere Leistung erzielt als mit der MySQL Client Library, da er stets
  die effizienteste Nutzung des Speichers gewährleistet. Ein Beispiel für die
  Speichereffizienz ist die Tatsache, dass bei Verwendung der MySQL Client
  Library jede Zeile zweimal im Speicher abgelegt wird, während beim MySQL
  Native Driver jede Zeile nur einmal im Speicher abgelegt wird.
 </para>
 <note>
  <title>Überwachen der Speichernutzung</title>
  <para>
   Aufgrund der Tatsache, dass der MySQL Native Driver die Speicherverwaltung
   von PHP verwendet, kann seine Speichernutzung mit
   <function>memory_get_usage</function> verfolgt werden. Dies ist mit
   libmysqlclient nicht möglich, weil es stattdessen die C-Funktion malloc()
   verwendet.
  </para>
 </note>
 <para>
  <emphasis role="bold">Besondere Fähigkeiten</emphasis>
 </para>
 <para>
  Der native MySQL-Treiber bietet auch einige besondere Funktionalitäten, die
  nicht verfügbar sind, wenn die MySQL-Datenbankerweiterungen die MySQL Client
  Library verwenden. Diese besonderen Funktionalitäten sind unten aufgeführt:
 </para>
 <itemizedlist>
  <listitem>
   <para>
    Verbesserte persistente (dauerhafte) Verbindungen
   </para>
  </listitem>
  <listitem>
   <para>
    Die spezielle Funktion <function>mysqli_fetch_all</function>
   </para>
  </listitem>
  <listitem>
   <para>
    Aufrufe für Leistungsstatistiken:
    <function>mysqli_get_client_stats</function>,
    <function>mysqli_get_connection_stats</function>
   </para>
  </listitem>
 </itemizedlist>
 <para>
  Mit Hilfe der Leistungsstatistiken können Leistungsengpässe sehr gut erkannt
  werden.
 </para>
 <para>
  In Verbindung mit der Erweiterung <literal>mysqli</literal> ermöglicht der
  MySQL Native Driver auch persistente Verbindungen.
 </para>
 <para>
  <emphasis role="bold">SSL-Unterstützung</emphasis>
 </para>
 <para>
  Der MySQL Native Driver unterstützt SSL.
 </para>
 <para>
  <emphasis role="bold">Unterstützung komprimierter Protokolle</emphasis>
 </para>
 <para>
  Der MySQL Native Driver unterstützt das komprimierte
  Client-Server-Protokoll. Wenn die Erweiterung <literal>ext/mysqli</literal>
  so konfiguriert ist, dass sie den MySQL Native Driver verwendet, kann sie
  dieses Feature ebenfalls nutzen. Es ist zu beachten, dass
  <literal>PDO_MYSQL</literal> die Komprimierung in Verbindung mit mysqlnd
  <emphasis>NICHT</emphasis> unterstützt.
 </para>
 <para>
  <emphasis role="bold">Unterstützung für benannte Pipes</emphasis>
 </para>
 <para>
  In Windows-Umgebungen können benannte Pipes für Verbindungen verwendet
  werden.
 </para>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
