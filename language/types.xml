<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 9fe810352095922a68ce2807745a9bc35c0afe1f Maintainer: hholzgra Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: 9fe810352095922a68ce2807745a9bc35c0afe1f Reviewer: samesch -->
<!-- CREDITS: samesch, betz -->
<chapter xml:id="language.types" xmlns="http://docbook.org/ns/docbook">
 <title>Typen</title>

 <sect1 xml:id="language.types.intro">
  <title>Einführung</title>

  <simpara>
   PHP unterstützt zehn primitive Typen.
  </simpara>

  <para>
   Vier skalare Typen:
  </para>

  <itemizedlist>

   <listitem>
    <simpara>
     <type>bool</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>int</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>float</type> (Gleitkomma-Zahl, auch bezeichnet als <type>double</type>)
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>string</type> (Zeichenkette)
    </simpara>
   </listitem>

  </itemizedlist>

  <para>
   Vier zusammengesetzte Typen:
  </para>

  <itemizedlist>

   <listitem>
    <simpara>
     <type>array</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>object</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>callable</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>iterable</type>
    </simpara>
   </listitem>

  </itemizedlist>

  <para>
   Und zuletzt zwei spezielle Typen:
  </para>

  <itemizedlist>

   <listitem>
    <simpara>
     <type>resource</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>NULL</type>
    </simpara>
   </listitem>

  </itemizedlist>

  <simpara>
   Sie werden auch ein paar Hinweise auf den Typ "double" finden.
   Betrachten Sie double als dasselbe wie float. Die beiden
   Bezeichnungen existieren nur aus historischen Gründen.
  </simpara>

  <simpara>
   Der Typ einer Variablen wird normalerweise nicht vom Programmierer
   bestimmt. Zur Laufzeit von PHP wird entschieden, welchen Typs eine Variable
   ist. Dies ist abhängig vom Zusammenhang, in dem die Variable benutzt wird.
  </simpara>

  <note>
   <simpara>
    Um den Typ und den Wert eines bestimmten
    <link linkend="language.expressions">Ausdrucks (Expression)</link> zu
    überprüfen, können Sie <function>var_dump</function> benutzen.
   </simpara>

   <para>
    Wenn Sie zur Fehlersuche einfach nur eine lesbare Darstellung eines Typs
    benötigen, benutzen Sie <function>gettype</function>. Um auf einen
    bestimmten Typ zu prüfen, sollten Sie <emphasis>nicht</emphasis>
    <function>gettype</function> benutzen. Stattdessen sollten Sie die
    <literal>is_<replaceable>type</replaceable></literal>-Funktionen
    verwenden. Ein paar Beispiele:
   </para>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$a_bool = TRUE;   // ein Boolean (Wahrheitswert)
$a_str  = "foo";  // eine Zeichenkette (String)
$a_str2 = 'foo';  // eine Zeichenkette (String)
$an_int = 12;     // ein Integer (Ganzzahl)

echo gettype($a_bool); // gibt aus:  boolean
echo gettype($a_str);  // gibt aus:  string


// Falls es ein Integer ist, erhöhe ihn um vier
if (is_int($an_int)) {
    $an_int += 4;
}

// Falls $a_bool ein String ist, gib ihn aus
// (gibt überhaupt nichts aus)
if (is_string($a_bool)) {
    echo "String: $a_bool";
}
?>
]]>
    </programlisting>
   </informalexample>
  </note>

  <simpara>
   Wenn Sie die Umwandlung in einen bestimmten Variablen-Typ erzwingen wollen,
   erreichen Sie dies entweder durch
   <link linkend="language.types.typecasting">Typ-Umwandlung</link> (Cast)
   oder durch Gebrauch der Funktion <function>settype</function>.
  </simpara>

  <simpara>
   Beachten Sie, dass eine Variable abhängig vom Typ, dem die Variable zu dem
   Zeitpunkt entspricht, in bestimmten Situationen unterschiedlich ausgewertet
   werden kann. Weitere Informationen entnehmen Sie dem Abschnitt zur
   <link linkend="language.types.type-juggling">Typ-Veränderung (Type Juggling)</link>.
   Schauen Sie sich außerdem die
   <link linkend="types.comparisons">Tabelle zu Typenvergleichen in PHP</link>
   an, wenn Sie an Beispielen verschiedener typenbezogener Vergleiche
   interessiert sind.
  </simpara>
 </sect1>

 &language.types.boolean;
 &language.types.integer;
 &language.types.float;
 &language.types.string;
 &language.types.numeric-strings;
 &language.types.array;
 &language.types.iterable;
 &language.types.object;
 &language.types.enumerations;
 &language.types.resource;
 &language.types.null;
 &language.types.callable;
 &language.types.declarations;
 &language.types.type-juggling;

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
