<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: db7aa4f29bd5909f8ab9e3739f60afb77837e4df Maintainer: nikic Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: a9a6224ca97531df0a4e4b9b16b59c3f2baf1b09 Reviewer: samesch -->

<sect1 xml:id="function.return" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>return</title>
 <?phpdoc print-version-for="return"?>
 <simpara>
  <literal>return</literal> gibt die Programmsteuerung an das aufrufende Modul
  zurück. Die Ausführung wird mit dem Ausdruck fortgesetzt, der dem Aufruf des
  aufrufenden Moduls folgt.
 </simpara>
 <simpara>
  Wenn <literal>return</literal> innerhalb einer Funktion aufgerufen wird,
  beendet es die Ausführung der Funktion augenblicklich und übergibt den
  Parameter als Rückgabewert der Funktion. <literal>return</literal> beendet
  auch die Ausführung von Code innerhalb von <function>eval</function> oder
  einer Skript-Datei.
 </simpara>
 <simpara>
  Wenn es im globalen Raum aufgerufen wird, endet die Ausführung des Skripts.
  Wenn das aktuelle Skript mit <function>include</function> oder
  <function>require</function> eingebunden wurde, endet nur die Ausführung der
  eingebundenen Datei, und der Wert, der an <literal>return</literal>
  übergeben wurde, wird zum Rückgabewert des Aufrufs von
  <function>include</function>/<function>require</function>.
  Wenn <literal>return</literal> im Hauptskript aufgerufen wird, endet die
  Ausführung des gesamten Skripts. Wenn das aktuelle Skript durch die
  &php.ini;-Konfigurationsdirektiven
  <link linkend="ini.auto-prepend-file">auto_prepend_file</link> oder
  <link linkend="ini.auto-append-file">auto_append_file</link> aufgerufen
  wurde, wird die Ausführung dieses Skripts beendet.
 </simpara>
 <simpara>
  Für mehr Informationen siehe die Dokumentation zu
  <link linkend="functions.returning-values">Rückgabewerten</link>.
 </simpara>
 <para>
  <note>
   <simpara>
    Weil <literal>return</literal> keine Funktion ist, sondern ein
    Sprachkonstrukt, sind die Klammern um den Parameter nicht erforderlich und
    von deren Verwendung wird abgeraten.
   </simpara>
  </note>
  <note>
   <simpara>
    Wenn kein Parameter übergeben wird, dürfen die Klammern nicht gesetzt
    werden und &null; wird zurückgegeben. Der Aufruf von
    <literal>return</literal> mit Klammern aber ohne Parameter verursacht
    einen Parse-Error.
   </simpara>
  </note>
 </para>

 <para>
  Seit PHP 7.1.0 lösen return-Anweisungen ohne Parameter bei Funktionen, die
  einen Rückgabetyp deklarieren, einen Fehler der Stufe
  <constant>E_COMPILE_ERROR</constant> aus, es sei denn, der Rückgabetyp
  ist <type>void</type>; in diesem Fall lösen return-Anweisungen mit einem
  Parameter diesen Fehler aus.
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
